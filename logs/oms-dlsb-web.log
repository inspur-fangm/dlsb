09:09:52 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee: startup date [Mon Aug 05 09:09:52 CST 2019]; root of context hierarchy
09:09:53 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
09:09:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b749c508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:54 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
09:09:54 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed: startup date [Mon Aug 05 09:09:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:09:55 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:09:56 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
09:09:57 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
09:09:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$fe793893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$89174200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$2f29e91a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$12a6285f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@129cdea: startup date [Mon Aug 05 09:09:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed
09:09:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$7feb2f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$c98b7729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$4d6e2204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$987c21e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$c60ce351] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$cd5c684c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b749c508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:09:59 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
09:09:59 [main] INFO  StandardService - Starting service [Tomcat]
09:09:59 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
09:10:00 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
09:10:00 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
09:10:00 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6125 ms
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
09:10:01 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
09:10:01 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
09:10:02 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cd115d: startup date [Mon Aug 05 09:10:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed
09:10:02 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:10:02 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@773f08: startup date [Mon Aug 05 09:10:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed
09:10:02 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:10:02 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
09:10:03 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:10:03 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:10:03 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@df292
09:10:03 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:10:03 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:10:04 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed: startup date [Mon Aug 05 09:09:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:10:04 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:10:04 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
09:10:05 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:10:05 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:10:05 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:10:05 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:10:05 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
09:10:05 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:10:08 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:10:09 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
09:10:09 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
09:10:10 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
09:10:10 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:10:10 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:10:10 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
09:10:10 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:10:10 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
09:10:10 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:10:10 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:10:10 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:10:10 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=a5f1ed,type=ConfigurationPropertiesRebinder]
09:10:10 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:10:10 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
09:10:10 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
09:10:10 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
09:10:10 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
09:10:10 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
09:10:10 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
09:10:10 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
09:10:10 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
09:10:11 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:10:11 [main] INFO  DiscoveryClient - Disable delta property : false
09:10:11 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
09:10:11 [main] INFO  DiscoveryClient - Force full registry fetch : false
09:10:11 [main] INFO  DiscoveryClient - Application is null : false
09:10:11 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
09:10:11 [main] INFO  DiscoveryClient - Application version is -1: true
09:10:11 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
09:10:11 [main] INFO  DiscoveryClient - The response status is 200
09:10:11 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
09:10:11 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
09:10:11 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564967411586 with initial instances count: 14
09:10:11 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
09:10:11 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564967411617, current=UP, previous=STARTING]
09:10:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:10:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:10:11 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:10:11 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
09:10:11 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
09:10:11 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
09:10:11 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
09:10:11 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
09:10:11 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
09:10:11 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
09:10:11 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 19.768 seconds (JVM running for 22.215)
09:10:39 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
09:10:39 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
09:10:39 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
09:10:39 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
09:11:01 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c76983: startup date [Mon Aug 05 09:11:01 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed
09:11:01 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:11:02 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:11:02 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
09:11:02 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:11:02 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:11:02 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:11:02 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1be1f80
09:11:03 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16a0299: startup date [Mon Aug 05 09:11:12 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a5f1ed
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:11:12 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@f8f464
09:11:13 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:15:11 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:16:44 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12a01d4: startup date [Mon Aug 05 09:16:44 CST 2019]; root of context hierarchy
09:16:44 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
09:16:44 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:16:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fc0307d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:45 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
09:16:45 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3: startup date [Mon Aug 05 09:16:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12a01d4
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:16:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:16:48 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
09:16:49 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
09:16:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$c6efa408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$518dad75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$f7a0548f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$db1c93d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:50 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a33316: startup date [Mon Aug 05 09:16:50 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
09:16:50 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$d0751e6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$9201e29e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$15e48d79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$60f28d5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$8e834ec6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$95d2d3c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fc0307d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:16:52 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
09:16:52 [main] INFO  StandardService - Starting service [Tomcat]
09:16:52 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
09:16:52 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
09:16:52 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
09:16:52 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6938 ms
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
09:16:53 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
09:16:54 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
09:16:54 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16a2819: startup date [Mon Aug 05 09:16:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
09:16:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:16:55 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@abdd5e: startup date [Mon Aug 05 09:16:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
09:16:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:16:55 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
09:16:55 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:16:55 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:16:55 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@125ed2b
09:16:56 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:16:56 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:16:56 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3: startup date [Mon Aug 05 09:16:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12a01d4
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:16:56 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:16:57 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:16:57 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
09:16:58 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:16:58 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:16:58 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:16:58 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:16:58 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
09:16:58 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:17:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:17:01 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
09:17:02 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
09:17:02 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
09:17:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:17:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:17:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
09:17:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:17:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
09:17:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:17:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:17:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:17:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=12a1da3,type=ConfigurationPropertiesRebinder]
09:17:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:17:02 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
09:17:02 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
09:17:02 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
09:17:02 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
09:17:02 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
09:17:02 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
09:17:02 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
09:17:02 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
09:17:03 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:17:03 [main] INFO  DiscoveryClient - Disable delta property : false
09:17:03 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
09:17:03 [main] INFO  DiscoveryClient - Force full registry fetch : false
09:17:03 [main] INFO  DiscoveryClient - Application is null : false
09:17:03 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
09:17:03 [main] INFO  DiscoveryClient - Application version is -1: true
09:17:03 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
09:17:03 [main] INFO  DiscoveryClient - The response status is 200
09:17:03 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
09:17:03 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
09:17:03 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564967823728 with initial instances count: 16
09:17:03 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
09:17:03 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564967823759, current=UP, previous=STARTING]
09:17:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:17:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:17:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:17:03 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
09:17:03 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
09:17:03 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
09:17:03 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
09:17:03 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
09:17:03 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
09:17:03 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
09:17:03 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 21.038 seconds (JVM running for 25.699)
09:17:26 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
09:17:26 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
09:17:26 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
09:17:26 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
09:17:27 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@13e75cb: startup date [Mon Aug 05 09:17:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
09:17:27 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:17:27 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:17:28 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
09:17:28 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:17:28 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:17:28 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:17:28 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@eb7583
09:17:29 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:22:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:25:53 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bfa2dd: startup date [Mon Aug 05 09:25:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:25:54 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2f6d8e
09:25:55 [PollingServerListUpdater-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:27:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:29:44 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c9c3fd: startup date [Mon Aug 05 09:29:44 CST 2019]; root of context hierarchy
09:29:45 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
09:29:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:29:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c60d19e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:46 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
09:29:46 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d: startup date [Mon Aug 05 09:29:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c9c3fd
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:29:47 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:29:47 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
09:29:48 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
09:29:48 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$d3c8d71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$97da96de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$3ded3df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$21697d3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@178a45b: startup date [Mon Aug 05 09:29:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d
09:29:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$16c207d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$d84ecc07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$5c3176e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$a73f76c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$d4d0382f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$dc1fbd2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c60d19e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:29:50 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
09:29:50 [main] INFO  StandardService - Starting service [Tomcat]
09:29:50 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
09:29:51 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
09:29:51 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
09:29:51 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4828 ms
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
09:29:51 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
09:29:52 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
09:29:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1677add: startup date [Mon Aug 05 09:29:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d
09:29:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:29:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fd2e17: startup date [Mon Aug 05 09:29:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d
09:29:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:29:53 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
09:29:53 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:29:53 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:29:53 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@143b101
09:29:54 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:29:54 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:29:54 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d: startup date [Mon Aug 05 09:29:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c9c3fd
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:29:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:29:55 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
09:29:56 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:29:56 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:29:56 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:29:56 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:29:56 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
09:29:56 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:29:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:29:59 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
09:30:00 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
09:30:00 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
09:30:00 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:30:00 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:30:00 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
09:30:00 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:30:00 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
09:30:00 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:30:00 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:30:00 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:30:00 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=65860d,type=ConfigurationPropertiesRebinder]
09:30:00 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:30:00 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
09:30:00 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
09:30:00 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
09:30:00 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
09:30:00 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
09:30:00 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
09:30:01 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
09:30:01 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
09:30:01 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:30:01 [main] INFO  DiscoveryClient - Disable delta property : false
09:30:01 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
09:30:01 [main] INFO  DiscoveryClient - Force full registry fetch : false
09:30:01 [main] INFO  DiscoveryClient - Application is null : false
09:30:01 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
09:30:01 [main] INFO  DiscoveryClient - Application version is -1: true
09:30:01 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
09:30:01 [main] INFO  DiscoveryClient - The response status is 200
09:30:01 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
09:30:01 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
09:30:01 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564968601884 with initial instances count: 17
09:30:01 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
09:30:01 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564968601915, current=UP, previous=STARTING]
09:30:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:30:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:30:01 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:30:01 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
09:30:01 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
09:30:02 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
09:30:02 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
09:30:02 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
09:30:02 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
09:30:02 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
09:30:02 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.943 seconds (JVM running for 20.182)
09:30:14 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
09:30:14 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
09:30:14 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
09:30:14 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
09:30:15 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@34141a: startup date [Mon Aug 05 09:30:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65860d
09:30:15 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:30:15 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:30:15 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
09:30:15 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:30:15 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:30:15 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:30:15 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@131c4e8
09:30:16 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:30:19 [http-nio-8083-exec-4] ERROR runtime - Error executing FreeMarker template
freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> dlsb  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 36]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if dlsb.czName??  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 31]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.NonHashException.<init>(NonHashException.java:49)
	at freemarker.core.Dot._eval(Dot.java:48)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.ExistsExpression._eval(ExistsExpression.java:49)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.Expression.evalToBoolean(Expression.java:161)
	at freemarker.core.Expression.evalToBoolean(Expression.java:147)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:325)
	at freemarker.core.Environment.visit(Environment.java:331)
	at freemarker.core.Environment.process(Environment.java:304)
	at freemarker.template.Template.process(Template.java:382)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:368)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:285)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:235)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:59)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dc.common.xss.XssFilter.doFilter(XssFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
09:30:19 [http-nio-8083-exec-4] ERROR [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/dlsb] threw exception [Request processing failed; nested exception is freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> dlsb  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 36]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if dlsb.czName??  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 31]
----] with root cause
freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:
==> dlsb  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 36]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if dlsb.czName??  [in template "dlsb/dc/dcconfigindex.ftl" at line 41, column 31]
----
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.NonHashException.<init>(NonHashException.java:49)
	at freemarker.core.Dot._eval(Dot.java:48)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.ExistsExpression._eval(ExistsExpression.java:49)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.Expression.evalToBoolean(Expression.java:161)
	at freemarker.core.Expression.evalToBoolean(Expression.java:147)
	at freemarker.core.IfBlock.accept(IfBlock.java:49)
	at freemarker.core.Environment.visit(Environment.java:325)
	at freemarker.core.Environment.visit(Environment.java:331)
	at freemarker.core.Environment.process(Environment.java:304)
	at freemarker.template.Template.process(Template.java:382)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:368)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:285)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:235)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:167)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:303)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:59)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dc.common.xss.XssFilter.doFilter(XssFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
09:35:01 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:35:08 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@957c0f: startup date [Mon Aug 05 09:35:08 CST 2019]; root of context hierarchy
09:35:08 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
09:35:08 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:08 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6fbf4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:09 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
09:35:09 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516: startup date [Mon Aug 05 09:35:09 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@957c0f
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:35:10 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
09:35:10 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
09:35:11 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
09:35:11 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$3e2b6860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$c8c971cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$6edc18e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$5258582c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d14037: startup date [Mon Aug 05 09:35:12 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516
09:35:12 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$47b0e2c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$93da6f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$8d2051d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$d82e51b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$5bf131e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d0e9819] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6fbf4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
09:35:13 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
09:35:13 [main] INFO  StandardService - Starting service [Tomcat]
09:35:13 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
09:35:14 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
09:35:14 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
09:35:14 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4710 ms
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
09:35:15 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
09:35:15 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
09:35:16 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@530644: startup date [Mon Aug 05 09:35:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516
09:35:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:16 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10e4b00: startup date [Mon Aug 05 09:35:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516
09:35:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:16 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
09:35:16 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:35:16 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:35:16 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a37591
09:35:17 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
09:35:17 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
09:35:18 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516: startup date [Mon Aug 05 09:35:09 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@957c0f
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
09:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
09:35:18 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
09:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:35:19 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
09:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
09:35:22 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
09:35:23 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
09:35:23 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
09:35:23 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
09:35:23 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
09:35:23 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
09:35:23 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
09:35:23 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
09:35:23 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
09:35:23 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
09:35:23 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
09:35:23 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e67516,type=ConfigurationPropertiesRebinder]
09:35:23 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
09:35:23 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
09:35:23 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
09:35:23 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
09:35:23 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
09:35:24 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
09:35:24 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
09:35:24 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
09:35:24 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
09:35:24 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:35:24 [main] INFO  DiscoveryClient - Disable delta property : false
09:35:24 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
09:35:24 [main] INFO  DiscoveryClient - Force full registry fetch : false
09:35:24 [main] INFO  DiscoveryClient - Application is null : false
09:35:24 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
09:35:24 [main] INFO  DiscoveryClient - Application version is -1: true
09:35:24 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
09:35:25 [main] INFO  DiscoveryClient - The response status is 200
09:35:25 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
09:35:25 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
09:35:25 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564968925088 with initial instances count: 17
09:35:25 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
09:35:25 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564968925119, current=UP, previous=STARTING]
09:35:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
09:35:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
09:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
09:35:25 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
09:35:25 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
09:35:25 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
09:35:25 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
09:35:25 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
09:35:25 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
09:35:25 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
09:35:25 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.852 seconds (JVM running for 19.644)
09:35:30 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
09:35:30 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
09:35:30 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
09:35:30 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
09:35:31 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@27407d: startup date [Mon Aug 05 09:35:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e67516
09:35:31 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:31 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:35:31 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
09:35:31 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
09:35:31 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
09:35:31 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:35:31 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1006553
09:35:32 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
09:40:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:45:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:50:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
09:55:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:00:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:05:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:10:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:15:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:20:24 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:25:26 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:30:26 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:35:26 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:35:32 [SessionValidationThread-1] INFO  AbstractValidatingSessionManager - Validating all active sessions...
10:40:26 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:43:46 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@276594: startup date [Mon Aug 05 10:43:46 CST 2019]; root of context hierarchy
10:43:47 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
10:43:47 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:43:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f33d3d0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:48 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
10:43:48 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3: startup date [Mon Aug 05 10:43:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@276594
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:43:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:43:50 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:43:52 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
10:43:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$3a6cb09a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$c50aba07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$6b1d6121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$4e99a066] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10342e0: startup date [Mon Aug 05 10:43:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
10:43:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$43f22afc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$57eef30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$89619a0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$d46f99ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2005b58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$94fe053] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f33d3d0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:43:55 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
10:43:55 [main] INFO  StandardService - Starting service [Tomcat]
10:43:55 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
10:43:55 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:43:55 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
10:43:55 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 7278 ms
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
10:43:57 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
10:43:57 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
10:43:58 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@e8ceb3: startup date [Mon Aug 05 10:43:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
10:43:58 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:43:58 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b8eb96: startup date [Mon Aug 05 10:43:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3
10:43:58 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:43:58 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
10:43:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:43:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:43:58 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1ab4b33
10:43:59 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:43:59 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:44:00 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@12a1da3: startup date [Mon Aug 05 10:43:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@276594
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroolertest.DlsbControllerTest.findCfgData()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:44:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:44:00 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
10:44:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:44:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:44:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:44:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:44:01 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:44:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:44:04 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:44:05 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
10:44:05 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
10:44:06 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:44:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:44:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:44:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
10:44:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:44:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
10:44:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:44:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:44:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:44:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=12a1da3,type=ConfigurationPropertiesRebinder]
10:44:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:44:06 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
10:44:06 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
10:44:06 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
10:44:06 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
10:44:06 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
10:44:06 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
10:44:06 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
10:44:06 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
10:44:07 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:44:07 [main] INFO  DiscoveryClient - Disable delta property : false
10:44:07 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
10:44:07 [main] INFO  DiscoveryClient - Force full registry fetch : false
10:44:07 [main] INFO  DiscoveryClient - Application is null : false
10:44:07 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
10:44:07 [main] INFO  DiscoveryClient - Application version is -1: true
10:44:07 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
10:44:07 [main] INFO  DiscoveryClient - The response status is 200
10:44:07 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
10:44:07 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:44:07 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564973047698 with initial instances count: 17
10:44:07 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
10:44:07 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564973047733, current=UP, previous=STARTING]
10:44:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:44:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:44:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:44:07 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:44:07 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
10:44:07 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
10:44:07 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
10:44:07 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
10:44:07 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
10:44:07 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
10:44:07 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 22.777 seconds (JVM running for 26.345)
10:47:26 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0a4cb: startup date [Mon Aug 05 10:47:26 CST 2019]; root of context hierarchy
10:47:27 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
10:47:27 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:47:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49babf2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:27 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
10:47:28 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f98231: startup date [Mon Aug 05 10:47:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0a4cb
10:47:28 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:47:28 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:47:28 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:47:28 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:47:28 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:47:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:47:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:47:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:47:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:47:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:47:29 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:47:30 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
10:47:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$90ea32b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$1b883c26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$c19ae340] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$a5172285] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@126893f: startup date [Mon Aug 05 10:47:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f98231
10:47:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$9a6fad1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$5bfc714f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$dfdf1c2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$2aed1c0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$587ddd77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5fcd6272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49babf2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:47:32 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
10:47:32 [main] INFO  StandardService - Starting service [Tomcat]
10:47:32 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
10:47:33 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:47:33 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
10:47:33 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5032 ms
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
10:47:33 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
10:47:34 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
10:47:35 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b19e5c: startup date [Mon Aug 05 10:47:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f98231
10:47:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:47:35 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8b4f70: startup date [Mon Aug 05 10:47:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f98231
10:47:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:47:35 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
10:47:35 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:47:35 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:47:35 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25d950
10:47:36 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:47:36 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:47:36 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f98231: startup date [Mon Aug 05 10:47:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0a4cb
10:47:36 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroolertest.DlsbControllerTest.findCfgData()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:47:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:47:37 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
10:47:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:47:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:47:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:47:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:47:38 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:47:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:40 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:47:41 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
10:47:42 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
10:47:42 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:47:42 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:47:42 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:47:42 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
10:47:42 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:47:42 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
10:47:42 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:47:42 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:47:42 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:47:42 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f98231,type=ConfigurationPropertiesRebinder]
10:47:42 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:47:42 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
10:47:42 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
10:47:42 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
10:47:42 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
10:47:42 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
10:47:42 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
10:47:42 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
10:47:42 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
10:47:43 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:47:43 [main] INFO  DiscoveryClient - Disable delta property : false
10:47:43 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
10:47:43 [main] INFO  DiscoveryClient - Force full registry fetch : false
10:47:43 [main] INFO  DiscoveryClient - Application is null : false
10:47:43 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
10:47:43 [main] INFO  DiscoveryClient - Application version is -1: true
10:47:43 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
10:47:43 [main] INFO  DiscoveryClient - The response status is 200
10:47:43 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
10:47:43 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:47:43 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564973263767 with initial instances count: 17
10:47:43 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
10:47:43 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564973263799, current=UP, previous=STARTING]
10:47:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:47:43 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:47:43 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:47:43 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:47:43 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
10:47:43 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
10:47:43 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
10:47:43 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
10:47:44 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
10:47:44 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
10:47:44 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.924 seconds (JVM running for 19.669)
10:49:32 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee: startup date [Mon Aug 05 10:49:32 CST 2019]; root of context hierarchy
10:49:32 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
10:49:32 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:32 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc89f657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:33 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
10:49:33 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18633ae: startup date [Mon Aug 05 10:49:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:49:34 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:49:35 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
10:49:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$43b969e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$ce57734f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$746a1a69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$57e659ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ef1d58: startup date [Mon Aug 05 10:49:36 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18633ae
10:49:36 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$4d3ee444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$ecba878] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$92ae5353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$ddbc5334] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$b4d14a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:37 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$129c999b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:37 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc89f657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:37 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
10:49:37 [main] INFO  StandardService - Starting service [Tomcat]
10:49:37 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
10:49:38 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:49:38 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
10:49:38 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4883 ms
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
10:49:39 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
10:49:39 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
10:49:40 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a4db4f: startup date [Mon Aug 05 10:49:40 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18633ae
10:49:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:40 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@14d46c8: startup date [Mon Aug 05 10:49:40 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18633ae
10:49:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:40 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
10:49:41 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:49:41 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:49:41 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4db9fb
10:49:41 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:49:41 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:49:42 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18633ae: startup date [Mon Aug 05 10:49:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroolertest.DlsbControllerTest.findCfgData()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:49:42 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:49:42 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
10:49:43 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:43 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:43 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:43 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:43 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:49:44 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:49:46 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:47 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
10:49:47 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
10:49:48 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:49:48 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:49:48 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:49:48 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
10:49:48 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:49:48 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
10:49:48 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:49:48 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:49:48 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:49:48 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=18633ae,type=ConfigurationPropertiesRebinder]
10:49:48 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:49:48 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
10:49:48 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
10:49:48 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
10:49:48 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
10:49:48 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
10:49:48 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
10:49:48 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
10:49:48 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
10:49:49 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:49:49 [main] INFO  DiscoveryClient - Disable delta property : false
10:49:49 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
10:49:49 [main] INFO  DiscoveryClient - Force full registry fetch : false
10:49:49 [main] INFO  DiscoveryClient - Application is null : false
10:49:49 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
10:49:49 [main] INFO  DiscoveryClient - Application version is -1: true
10:49:49 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
10:49:49 [main] INFO  DiscoveryClient - The response status is 200
10:49:49 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
10:49:49 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:49:49 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564973389662 with initial instances count: 17
10:49:49 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
10:49:49 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564973389709, current=UP, previous=STARTING]
10:49:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:49:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:49:49 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:49:49 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:49:49 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
10:49:49 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
10:49:49 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
10:49:49 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
10:49:49 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
10:49:49 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
10:49:49 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.505 seconds (JVM running for 20.496)
11:04:10 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d9a50: startup date [Mon Aug 05 11:04:10 CST 2019]; root of context hierarchy
11:04:11 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:04:11 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:04:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9085f42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:12 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:04:12 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14c0e4e: startup date [Mon Aug 05 11:04:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5d9a50
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:04:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:04:13 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:04:14 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:04:14 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$2037d2cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$aad5dc3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$50e88354] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$3464c299] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19cb76: startup date [Mon Aug 05 11:04:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14c0e4e
11:04:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$29bd4d2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$eb4a1163] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$6f2cbc3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$ba3abc1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$e7cb7d8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef1b0286] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9085f42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:04:16 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:04:16 [main] INFO  StandardService - Starting service [Tomcat]
11:04:16 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:04:17 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:04:17 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:04:17 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5176 ms
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:04:18 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:04:18 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:04:19 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1229f6: startup date [Mon Aug 05 11:04:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14c0e4e
11:04:19 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:04:19 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8bd063: startup date [Mon Aug 05 11:04:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14c0e4e
11:04:19 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:04:20 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:04:20 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:04:20 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:04:20 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1315a00
11:04:20 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:04:20 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:04:21 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14c0e4e: startup date [Mon Aug 05 11:04:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5d9a50
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:04:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:04:22 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:04:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:04:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:04:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:04:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:04:22 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:04:23 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:04:26 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:04:26 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:04:27 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:04:27 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:04:27 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:04:27 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:04:27 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:04:27 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:04:27 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:04:27 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:04:27 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:04:27 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14c0e4e,type=ConfigurationPropertiesRebinder]
11:04:27 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:04:27 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:04:27 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:04:27 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:04:27 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:04:27 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:04:27 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:04:27 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:04:27 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:04:28 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:04:28 [main] INFO  DiscoveryClient - Disable delta property : false
11:04:28 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:04:28 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:04:28 [main] INFO  DiscoveryClient - Application is null : false
11:04:28 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:04:28 [main] INFO  DiscoveryClient - Application version is -1: true
11:04:28 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:04:28 [main] INFO  DiscoveryClient - The response status is 200
11:04:28 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:04:28 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:04:28 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564974268591 with initial instances count: 17
11:04:28 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:04:28 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564974268624, current=UP, previous=STARTING]
11:04:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:04:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:04:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:04:28 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:04:28 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:04:28 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:04:28 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:04:28 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:04:28 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:04:28 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:04:28 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.877 seconds (JVM running for 20.516)
11:08:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22: startup date [Mon Aug 05 11:08:30 CST 2019]; root of context hierarchy
11:08:30 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:08:31 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:08:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fd192c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:31 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:08:31 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc: startup date [Mon Aug 05 11:08:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:08:32 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:08:33 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:08:33 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:08:33 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:08:34 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:08:34 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$c7010653] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$519f0fc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$f7b1b6da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$db2df61f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@101897f: startup date [Mon Aug 05 11:08:34 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc
11:08:34 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$d08680b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$921344e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$15f5efc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$6103efa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$8e94b111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$95e4360c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7fd192c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:08:36 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:08:36 [main] INFO  StandardService - Starting service [Tomcat]
11:08:36 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:08:36 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:08:36 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:08:36 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4797 ms
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:08:37 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:08:38 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:08:38 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@530644: startup date [Mon Aug 05 11:08:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc
11:08:38 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:08:38 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10e4b00: startup date [Mon Aug 05 11:08:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc
11:08:38 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:08:39 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:08:39 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:08:39 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:08:39 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a37591
11:08:40 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:08:40 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:08:40 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc: startup date [Mon Aug 05 11:08:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:08:40 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:08:41 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:08:41 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:08:41 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:08:41 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:08:41 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:08:41 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:08:42 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:44 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:08:45 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:08:45 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:08:45 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:08:45 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:08:45 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:08:45 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:08:45 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:08:45 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:08:45 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:08:45 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:08:45 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:08:45 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=aeefcc,type=ConfigurationPropertiesRebinder]
11:08:45 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:08:45 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:08:46 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:08:46 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:08:46 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:08:46 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:08:46 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:08:46 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:08:46 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:08:46 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:08:47 [main] INFO  DiscoveryClient - Disable delta property : false
11:08:47 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:08:47 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:08:47 [main] INFO  DiscoveryClient - Application is null : false
11:08:47 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:08:47 [main] INFO  DiscoveryClient - Application version is -1: true
11:08:47 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:08:47 [main] INFO  DiscoveryClient - The response status is 200
11:08:47 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:08:47 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:08:47 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564974527657 with initial instances count: 17
11:08:47 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:08:47 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564974527688, current=UP, previous=STARTING]
11:08:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:08:47 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:08:47 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:08:47 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:08:47 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:08:47 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:08:47 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:08:47 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:08:47 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:08:47 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:08:47 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.908 seconds (JVM running for 19.717)
11:10:27 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:10:27 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:10:27 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
11:10:27 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:10:39 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ff0fef: startup date [Mon Aug 05 11:10:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc
11:10:39 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:10:39 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:39 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:10:39 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:10:39 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:10:39 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:39 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1114a5f
11:10:40 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39b02f: startup date [Mon Aug 05 11:10:56 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aeefcc
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:10:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@13ba4b5
11:10:57 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:12:19 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2: startup date [Mon Aug 05 11:12:19 CST 2019]; root of context hierarchy
11:12:19 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:12:20 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ee0f58c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:20 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:12:20 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138: startup date [Mon Aug 05 11:12:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:12:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:12:22 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:12:22 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:12:22 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:12:23 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:12:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$353ecc54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$bfdcd5c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$65ef7cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$496bbc20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19c3cee: startup date [Mon Aug 05 11:12:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138
11:12:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$3ec446b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$510aea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$8433b5c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$cf41b5a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$fcd27712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$421fc0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ee0f58c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:12:25 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:12:25 [main] INFO  StandardService - Starting service [Tomcat]
11:12:25 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:12:25 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:12:25 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:12:25 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4985 ms
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:12:26 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:12:27 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:12:27 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f8520: startup date [Mon Aug 05 11:12:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138
11:12:27 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:28 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@99a0: startup date [Mon Aug 05 11:12:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138
11:12:28 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:12:28 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:12:28 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:12:28 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:12:28 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@103c1fb
11:12:29 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:12:29 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:12:29 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138: startup date [Mon Aug 05 11:12:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:12:29 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:12:30 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:12:30 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:30 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:30 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:30 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:30 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:12:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:12:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:12:34 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:12:34 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:12:35 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:12:35 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:12:35 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:12:35 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:12:35 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:12:35 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:12:35 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:12:35 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:12:35 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:12:35 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=198d138,type=ConfigurationPropertiesRebinder]
11:12:35 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:12:35 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:12:35 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:12:35 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:12:35 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:12:35 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:12:35 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:12:35 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:12:35 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:12:35 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:12:36 [main] INFO  DiscoveryClient - Disable delta property : false
11:12:36 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:12:36 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:12:36 [main] INFO  DiscoveryClient - Application is null : false
11:12:36 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:12:36 [main] INFO  DiscoveryClient - Application version is -1: true
11:12:36 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:12:36 [main] INFO  DiscoveryClient - The response status is 200
11:12:36 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:12:36 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:12:36 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564974756313 with initial instances count: 17
11:12:36 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:12:36 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564974756344, current=UP, previous=STARTING]
11:12:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:12:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:12:36 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:12:36 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:12:36 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:12:36 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:12:36 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:12:36 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:12:36 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:12:36 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:12:36 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.642 seconds (JVM running for 19.556)
11:13:16 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:13:16 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:13:16 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
11:13:16 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:13:17 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@949062: startup date [Mon Aug 05 11:13:17 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138
11:13:17 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:13:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:18 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:13:18 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:13:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:13:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1fe382a
11:13:19 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e882b5: startup date [Mon Aug 05 11:13:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@198d138
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:13:38 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@16db389
11:13:39 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:14:48 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1045a87: startup date [Mon Aug 05 11:14:48 CST 2019]; root of context hierarchy
11:14:48 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:14:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5b94cede] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:49 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:14:49 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5: startup date [Mon Aug 05 11:14:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1045a87
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:50 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:14:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:14:51 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:14:52 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:14:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$a2c44269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$2d624bd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$d374f2f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$b6f13235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c3a4c2: startup date [Mon Aug 05 11:14:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5
11:14:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$ac49bccb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$6dd680ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$f1b92bda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$3cc72bbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$6a57ed27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$71a77222] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5b94cede] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:54 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:14:54 [main] INFO  StandardService - Starting service [Tomcat]
11:14:54 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:14:54 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:14:54 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:14:54 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4797 ms
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:14:55 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:14:55 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:14:56 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bdbfe9: startup date [Mon Aug 05 11:14:56 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5
11:14:56 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:56 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b19e5c: startup date [Mon Aug 05 11:14:56 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5
11:14:56 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:57 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:14:57 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:14:57 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:14:57 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@24c40a
11:14:57 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:14:57 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:14:58 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5: startup date [Mon Aug 05 11:14:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1045a87
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:14:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:14:58 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:14:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:59 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:14:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:15:02 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:15:03 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:15:03 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:15:03 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:15:03 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:15:03 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:15:03 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:15:03 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:15:03 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:15:03 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:15:03 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:15:03 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:15:03 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1b082c5,type=ConfigurationPropertiesRebinder]
11:15:03 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:15:03 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:15:04 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:15:04 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:15:04 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:15:04 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:15:04 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:15:04 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:15:04 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:15:04 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:15:04 [main] INFO  DiscoveryClient - Disable delta property : false
11:15:04 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:15:04 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:15:04 [main] INFO  DiscoveryClient - Application is null : false
11:15:04 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:15:04 [main] INFO  DiscoveryClient - Application version is -1: true
11:15:04 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:15:05 [main] INFO  DiscoveryClient - The response status is 200
11:15:05 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:15:05 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:15:05 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564974905191 with initial instances count: 17
11:15:05 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:15:05 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564974905225, current=UP, previous=STARTING]
11:15:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:15:05 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:15:05 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:15:05 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:15:05 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:15:05 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:15:05 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:15:05 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:15:05 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:15:05 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:15:05 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.446 seconds (JVM running for 19.318)
11:15:17 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:15:17 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:15:17 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
11:15:17 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:15:18 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1021dee: startup date [Mon Aug 05 11:15:18 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b082c5
11:15:18 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:15:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:15:18 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:15:18 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:15:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:15:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:15:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1bdcc29
11:15:19 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:15:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8400f6: startup date [Mon Aug 05 11:15:59 CST 2019]; root of context hierarchy
11:15:59 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:15:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:15:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$baf4b856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:00 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:16:00 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec: startup date [Mon Aug 05 11:16:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8400f6
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:16:01 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:16:02 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:16:02 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:16:02 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$2242be1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$8cc2354e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$32d4dc68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$16511bad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18cf049: startup date [Mon Aug 05 11:16:03 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec
11:16:03 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$ba9a643] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$cd366a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$51191552] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$9c271533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$c9b7d69f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:04 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d1075b9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:04 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$baf4b856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:16:04 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:16:04 [main] INFO  StandardService - Starting service [Tomcat]
11:16:04 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:16:05 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:16:05 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:16:05 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5141 ms
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:16:06 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:16:06 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:16:07 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1bf4dfb: startup date [Mon Aug 05 11:16:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec
11:16:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:16:07 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1784062: startup date [Mon Aug 05 11:16:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec
11:16:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:16:07 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:16:08 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:16:08 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:16:08 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@159edff
11:16:08 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:16:08 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:16:09 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec: startup date [Mon Aug 05 11:16:00 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@8400f6
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:16:09 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:16:09 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:16:10 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:16:10 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:16:10 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:16:10 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:16:10 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:16:10 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:13 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:16:14 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:16:14 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:16:14 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:16:14 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:16:14 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:16:14 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:16:14 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:16:14 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:16:14 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:16:14 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:16:14 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:16:14 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=31c3ec,type=ConfigurationPropertiesRebinder]
11:16:14 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:16:14 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:16:14 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:16:14 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:16:14 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:16:15 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:16:15 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:16:15 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:16:15 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:16:15 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:16:15 [main] INFO  DiscoveryClient - Disable delta property : false
11:16:15 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:16:15 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:16:15 [main] INFO  DiscoveryClient - Application is null : false
11:16:15 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:16:15 [main] INFO  DiscoveryClient - Application version is -1: true
11:16:15 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:16:16 [main] INFO  DiscoveryClient - The response status is 200
11:16:16 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:16:16 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:16:16 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564974976017 with initial instances count: 17
11:16:16 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:16:16 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564974976048, current=UP, previous=STARTING]
11:16:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:16:16 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:16:16 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:16:16 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:16:16 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:16:16 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:16:16 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:16:16 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:16:16 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:16:16 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:16:16 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.896 seconds (JVM running for 19.624)
11:17:46 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:17:46 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:17:46 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
11:17:47 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:17:48 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ed64ff: startup date [Mon Aug 05 11:17:48 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec
11:17:48 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:17:48 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:48 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:17:48 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:17:48 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:17:48 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:48 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@ffd056
11:17:49 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8d7579: startup date [Mon Aug 05 11:17:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31c3ec
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:17:55 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@182a113
11:17:56 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:20:37 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224: startup date [Mon Aug 05 11:20:37 CST 2019]; root of context hierarchy
11:20:37 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:20:37 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:20:37 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59a62683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:38 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:20:38 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9: startup date [Mon Aug 05 11:20:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:20:39 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:20:39 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:20:40 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:20:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$a0d59a0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$2b73a37b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$d1864a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$b50289da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b82cd: startup date [Mon Aug 05 11:20:41 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9
11:20:41 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$aa5b1470] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$6be7d8a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$efca837f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$3ad88360] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$686944cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6fb8c9c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59a62683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:20:42 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:20:42 [main] INFO  StandardService - Starting service [Tomcat]
11:20:42 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:20:43 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:20:43 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:20:43 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4892 ms
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:20:44 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:20:44 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:20:45 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ce3ed7: startup date [Mon Aug 05 11:20:45 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9
11:20:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:20:45 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c9b1ee: startup date [Mon Aug 05 11:20:45 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9
11:20:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:20:45 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:20:46 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:20:46 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:20:46 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@96299b
11:20:46 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:20:46 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:20:47 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9: startup date [Mon Aug 05 11:20:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:20:47 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:20:47 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:20:48 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:20:48 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:20:48 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:20:48 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:20:48 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:20:48 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:20:51 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:20:51 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:20:52 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:20:52 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:20:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:20:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:20:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:20:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:20:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:20:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:20:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:20:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:20:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=13f9ad9,type=ConfigurationPropertiesRebinder]
11:20:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:20:52 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:20:52 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:20:52 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:20:52 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:20:53 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:20:53 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:20:53 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:20:53 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:20:53 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:20:53 [main] INFO  DiscoveryClient - Disable delta property : false
11:20:53 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:20:53 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:20:53 [main] INFO  DiscoveryClient - Application is null : false
11:20:53 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:20:53 [main] INFO  DiscoveryClient - Application version is -1: true
11:20:53 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:20:54 [main] INFO  DiscoveryClient - The response status is 200
11:20:54 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:20:54 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:20:54 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564975254153 with initial instances count: 17
11:20:54 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:20:54 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564975254184, current=UP, previous=STARTING]
11:20:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:20:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:20:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:20:54 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:20:54 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:20:54 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:20:54 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:20:54 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:20:54 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:20:54 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:20:54 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.853 seconds (JVM running for 19.677)
11:21:00 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:21:00 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:21:01 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
11:21:01 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:21:02 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@13da71: startup date [Mon Aug 05 11:21:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9
11:21:02 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:21:03 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:21:03 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:21:03 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:21:03 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:21:03 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:21:03 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@15a66c9
11:21:04 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@acf7de: startup date [Mon Aug 05 11:22:56 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@13f9ad9
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:22:56 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1de7ac6
11:22:57 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:25:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e2ab5a: startup date [Mon Aug 05 11:25:23 CST 2019]; root of context hierarchy
11:25:23 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:25:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1abd100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:24 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:25:24 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665: startup date [Mon Aug 05 11:25:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e2ab5a
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:25:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:25:26 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:25:27 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:25:27 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$48db448b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d3794df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$798bf512] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$5d083457] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@169464: startup date [Mon Aug 05 11:25:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665
11:25:27 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$5260beed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$13ed8321] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$97d02dfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e2de2ddd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$106eef49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$17be7444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:28 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1abd100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:25:29 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:25:29 [main] INFO  StandardService - Starting service [Tomcat]
11:25:29 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:25:29 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:25:29 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:25:29 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5079 ms
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:25:30 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:25:31 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:25:31 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9338f3: startup date [Mon Aug 05 11:25:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665
11:25:31 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:31 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@118e77c: startup date [Mon Aug 05 11:25:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665
11:25:31 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:25:32 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:25:32 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:25:32 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:25:32 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@104b493
11:25:32 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:25:32 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:25:33 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665: startup date [Mon Aug 05 11:25:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e2ab5a
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:25:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:25:34 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:25:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:25:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:25:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:25:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:25:34 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:25:35 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:25:37 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:25:38 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:25:38 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:25:38 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:25:38 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:25:38 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:25:38 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:25:38 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:25:38 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:25:38 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:25:38 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:25:38 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:25:38 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=722665,type=ConfigurationPropertiesRebinder]
11:25:38 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:25:38 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:25:39 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:25:39 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:25:39 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:25:39 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:25:39 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:25:39 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:25:39 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:25:39 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:25:39 [main] INFO  DiscoveryClient - Disable delta property : false
11:25:39 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:25:39 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:25:39 [main] INFO  DiscoveryClient - Application is null : false
11:25:39 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:25:39 [main] INFO  DiscoveryClient - Application version is -1: true
11:25:39 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:25:40 [main] INFO  DiscoveryClient - The response status is 200
11:25:40 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:25:40 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:25:40 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564975540282 with initial instances count: 17
11:25:40 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:25:40 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564975540314, current=UP, previous=STARTING]
11:25:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:25:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:25:40 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:25:40 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:25:40 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:25:40 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:25:40 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:25:40 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:25:40 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:25:40 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:25:40 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.83 seconds (JVM running for 19.586)
11:26:03 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:26:03 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:26:03 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
11:26:03 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:26:04 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1882bd1: startup date [Mon Aug 05 11:26:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665
11:26:04 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:26:04 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:26:04 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:26:04 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:26:04 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:26:04 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:26:04 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@80240a
11:26:05 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba83ab: startup date [Mon Aug 05 11:26:11 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@722665
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:26:11 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@914e89
11:26:12 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:30:39 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:35:39 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:40:39 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:42:43 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@33e892: startup date [Mon Aug 05 11:42:43 CST 2019]; root of context hierarchy
11:42:43 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:42:43 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:42:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbbe353c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:44 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:42:44 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f: startup date [Mon Aug 05 11:42:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@33e892
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:42:45 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:42:46 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:42:46 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:42:46 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$22eda8c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$ad8bb234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$539e594e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$371a9893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1316cd7: startup date [Mon Aug 05 11:42:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f
11:42:47 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$2c732329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$edffe75d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$71e29238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$bcf09219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$ea815385] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f1d0d880] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:48 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbbe353c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:42:48 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:42:48 [main] INFO  StandardService - Starting service [Tomcat]
11:42:48 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:42:49 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:42:49 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:42:49 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4969 ms
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:42:50 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:42:50 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:42:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1bf4dfb: startup date [Mon Aug 05 11:42:51 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f
11:42:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:42:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d742ad: startup date [Mon Aug 05 11:42:51 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f
11:42:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:42:52 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:42:52 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:42:52 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:42:52 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@113a46b
11:42:52 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:42:52 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:42:53 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f: startup date [Mon Aug 05 11:42:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@33e892
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:42:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:42:53 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:42:54 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:42:54 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:42:54 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:42:54 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:42:54 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:42:54 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:57 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:42:58 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:42:58 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:42:58 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:42:58 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:42:58 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:42:58 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:42:58 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:42:58 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:42:58 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:42:58 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:42:58 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:42:59 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1d0614f,type=ConfigurationPropertiesRebinder]
11:42:59 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:42:59 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:42:59 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:42:59 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:42:59 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:42:59 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:42:59 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:42:59 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:42:59 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:42:59 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:42:59 [main] INFO  DiscoveryClient - Disable delta property : false
11:42:59 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:42:59 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:42:59 [main] INFO  DiscoveryClient - Application is null : false
11:42:59 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:42:59 [main] INFO  DiscoveryClient - Application version is -1: true
11:42:59 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:43:00 [main] INFO  DiscoveryClient - The response status is 200
11:43:00 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:43:00 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:43:00 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564976580208 with initial instances count: 17
11:43:00 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:43:00 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564976580239, current=UP, previous=STARTING]
11:43:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:43:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:43:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:43:00 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:43:00 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:43:00 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:43:00 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:43:00 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:43:00 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:43:00 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:43:00 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.69 seconds (JVM running for 19.56)
11:43:17 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:43:17 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:43:17 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
11:43:17 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:43:18 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c8a168: startup date [Mon Aug 05 11:43:18 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f
11:43:18 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:43:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:43:18 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:43:18 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:43:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:43:18 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:43:18 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a0781a
11:43:19 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@874826: startup date [Mon Aug 05 11:43:26 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0614f
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:43:26 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@13b5e3e
11:43:27 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:44:01 [hystrix-OMS-DLSB-SERVICE-RM-6] WARN  BaseLoadBalancer - LoadBalancer [OMS-DLSB-SERVICE-RM]:  Error choosing server for key null
java.lang.IndexOutOfBoundsException: index (1) must be less than size (1)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:310)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:292)
	at com.google.common.collect.SingletonImmutableList.get(SingletonImmutableList.java:45)
	at com.netflix.loadbalancer.AbstractServerPredicate.chooseRoundRobinAfterFiltering(AbstractServerPredicate.java:203)
	at com.netflix.loadbalancer.PredicateBasedRule.choose(PredicateBasedRule.java:45)
	at com.netflix.loadbalancer.BaseLoadBalancer.chooseServer(BaseLoadBalancer.java:736)
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:113)
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:481)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
11:45:50 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22: startup date [Mon Aug 05 11:45:50 CST 2019]; root of context hierarchy
11:45:50 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:45:50 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:45:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1efc2445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:51 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:45:51 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842: startup date [Mon Aug 05 11:45:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:45:52 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:45:53 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:45:53 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:45:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$662b97d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$f0c9a13d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$96dc4857] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$7a58879c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a646b8: startup date [Mon Aug 05 11:45:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842
11:45:54 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$6fb11232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$313dd666] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$b5208141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$2e8122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2dbf428e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$350ec789] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1efc2445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:45:56 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:45:56 [main] INFO  StandardService - Starting service [Tomcat]
11:45:56 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:45:56 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:45:56 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:45:56 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4954 ms
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:45:57 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:45:58 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:45:58 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fec0bc: startup date [Mon Aug 05 11:45:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842
11:45:58 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:45:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@11d0d5c: startup date [Mon Aug 05 11:45:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842
11:45:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:45:59 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:45:59 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:45:59 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:45:59 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27d5f1
11:46:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:46:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:46:00 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842: startup date [Mon Aug 05 11:45:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@155cf22
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:46:00 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:46:01 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:46:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:46:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:46:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:46:01 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:46:02 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:46:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:46:05 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:46:06 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:46:06 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:46:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:46:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:46:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:46:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:46:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:46:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:46:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:46:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:46:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1498842,type=ConfigurationPropertiesRebinder]
11:46:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:46:06 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:46:06 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:46:06 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:46:06 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:46:06 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:46:06 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:46:06 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:46:06 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:46:07 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:46:07 [main] INFO  DiscoveryClient - Disable delta property : false
11:46:07 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:46:07 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:46:07 [main] INFO  DiscoveryClient - Application is null : false
11:46:07 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:46:07 [main] INFO  DiscoveryClient - Application version is -1: true
11:46:07 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:46:08 [main] INFO  DiscoveryClient - The response status is 200
11:46:08 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:46:08 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:46:08 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564976768027 with initial instances count: 17
11:46:08 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:46:08 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564976768058, current=UP, previous=STARTING]
11:46:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:46:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:46:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:46:08 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:46:08 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:46:08 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:46:08 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:46:08 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:46:08 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:46:08 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:46:08 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.396 seconds (JVM running for 20.14)
11:46:14 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:46:14 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:46:14 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
11:46:14 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:46:15 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@258063: startup date [Mon Aug 05 11:46:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842
11:46:15 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:46:15 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:15 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:46:15 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:46:15 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:46:15 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:15 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@153c061
11:46:16 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19e41ae: startup date [Mon Aug 05 11:46:22 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1498842
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:22 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1cbb60b
11:46:23 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:46:49 [hystrix-OMS-DLSB-SERVICE-RM-6] WARN  BaseLoadBalancer - LoadBalancer [OMS-DLSB-SERVICE-RM]:  Error choosing server for key null
java.lang.IndexOutOfBoundsException: index (1) must be less than size (1)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:310)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:292)
	at com.google.common.collect.SingletonImmutableList.get(SingletonImmutableList.java:45)
	at com.netflix.loadbalancer.AbstractServerPredicate.chooseRoundRobinAfterFiltering(AbstractServerPredicate.java:203)
	at com.netflix.loadbalancer.PredicateBasedRule.choose(PredicateBasedRule.java:45)
	at com.netflix.loadbalancer.BaseLoadBalancer.chooseServer(BaseLoadBalancer.java:736)
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:113)
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:481)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
11:49:31 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cc639: startup date [Mon Aug 05 11:49:31 CST 2019]; root of context hierarchy
11:49:32 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:49:32 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:32 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d08e7fec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:33 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:49:33 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365: startup date [Mon Aug 05 11:49:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cc639
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:49:34 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:49:34 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:49:35 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:49:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$17bdf377] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$a25bfce4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$486ea3fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$2beae343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:35 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10c1b9d: startup date [Mon Aug 05 11:49:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365
11:49:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$21436dd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$e2d0320d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$66b2dce8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$b1c0dcc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$df519e35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e6a12330] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:36 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d08e7fec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:49:37 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:49:37 [main] INFO  StandardService - Starting service [Tomcat]
11:49:37 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:49:37 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:49:37 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:49:37 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4718 ms
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:49:38 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:49:39 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:49:39 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3cff1c: startup date [Mon Aug 05 11:49:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365
11:49:39 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:39 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1840ecc: startup date [Mon Aug 05 11:49:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365
11:49:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:40 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:49:40 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:49:40 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:49:40 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1540247
11:49:41 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:49:41 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:49:41 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365: startup date [Mon Aug 05 11:49:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cc639
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:49:41 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:49:42 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:49:42 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:49:42 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:49:42 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:49:42 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:49:43 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:49:43 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:45 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:49:46 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:49:46 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:49:47 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:49:47 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:49:47 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:49:47 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:49:47 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:49:47 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:49:47 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:49:47 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:49:47 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:49:47 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4f4365,type=ConfigurationPropertiesRebinder]
11:49:47 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:49:47 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:49:47 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:49:47 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:49:47 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:49:47 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:49:47 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:49:47 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:49:47 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:49:47 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:49:48 [main] INFO  DiscoveryClient - Disable delta property : false
11:49:48 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:49:48 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:49:48 [main] INFO  DiscoveryClient - Application is null : false
11:49:48 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:49:48 [main] INFO  DiscoveryClient - Application version is -1: true
11:49:48 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:49:48 [main] INFO  DiscoveryClient - The response status is 200
11:49:48 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:49:48 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:49:48 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564976988517 with initial instances count: 17
11:49:48 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:49:48 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564976988548, current=UP, previous=STARTING]
11:49:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:49:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:49:48 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:49:48 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:49:48 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:49:48 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:49:48 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:49:48 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:49:48 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:49:48 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:49:48 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.721 seconds (JVM running for 19.521)
11:49:55 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
11:49:55 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
11:49:55 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
11:49:55 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:49:56 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ed4c1: startup date [Mon Aug 05 11:49:56 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365
11:49:56 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:49:56 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:49:56 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
11:49:56 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:49:56 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:49:56 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:49:56 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@10dffa4
11:49:57 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d6b941: startup date [Mon Aug 05 11:50:00 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4f4365
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:50:00 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@186bdf4
11:50:01 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
11:54:48 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:59:41 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3487: startup date [Mon Aug 05 11:59:41 CST 2019]; root of context hierarchy
11:59:41 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:59:41 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:59:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94dd7d61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:42 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:59:42 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf: startup date [Mon Aug 05 11:59:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3487
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:59:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:59:43 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:59:44 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:59:44 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$dc0cf0ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$66aafa59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$cbda173] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:44 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$f039e0b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b44737: startup date [Mon Aug 05 11:59:45 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf
11:59:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$e5926b4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$a71f2f82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$2b01da5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$760fda3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$a3a09baa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$aaf020a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94dd7d61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:59:46 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:59:46 [main] INFO  StandardService - Starting service [Tomcat]
11:59:46 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:59:47 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:59:47 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:59:47 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4766 ms
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:59:47 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:59:48 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:59:49 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@15ce261: startup date [Mon Aug 05 11:59:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf
11:59:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:59:49 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1db1a59: startup date [Mon Aug 05 11:59:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf
11:59:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:59:49 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:59:49 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:59:49 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:59:49 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1617a75
11:59:50 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:59:50 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:59:50 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf: startup date [Mon Aug 05 11:59:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c3487
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:59:50 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:59:51 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:59:51 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:59:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:59:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:59:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:59:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:59:52 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:59:52 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:59:54 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:59:55 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:59:55 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:59:56 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:59:56 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:59:56 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:59:56 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:59:56 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:59:56 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:59:56 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:59:56 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:59:56 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:59:56 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=109e8cf,type=ConfigurationPropertiesRebinder]
11:59:56 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:59:56 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:59:56 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:59:56 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:59:56 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:59:56 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:59:56 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:59:56 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:59:56 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:59:57 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:59:57 [main] INFO  DiscoveryClient - Disable delta property : false
11:59:57 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:59:57 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:59:57 [main] INFO  DiscoveryClient - Application is null : false
11:59:57 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:59:57 [main] INFO  DiscoveryClient - Application version is -1: true
11:59:57 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:59:57 [main] INFO  DiscoveryClient - The response status is 200
11:59:57 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:59:57 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:59:57 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564977597485 with initial instances count: 17
11:59:57 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:59:57 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564977597516, current=UP, previous=STARTING]
11:59:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:59:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:59:57 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:59:57 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:59:57 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:59:57 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:59:57 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:59:57 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:59:57 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:59:57 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:59:57 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.284 seconds (JVM running for 19.852)
12:00:02 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
12:00:02 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
12:00:02 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
12:00:02 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
12:00:03 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17bce39: startup date [Mon Aug 05 12:00:03 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf
12:00:03 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:00:04 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:00:04 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
12:00:04 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
12:00:04 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
12:00:04 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:00:04 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@55b1df
12:00:05 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@e72a7d: startup date [Mon Aug 05 12:00:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109e8cf
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:00:07 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@12058c8
12:00:08 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:04:57 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:05:39 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c2e933: startup date [Mon Aug 05 12:05:39 CST 2019]; root of context hierarchy
12:05:39 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
12:05:39 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:05:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13db6acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:41 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
12:05:41 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cc6211: startup date [Mon Aug 05 12:05:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c2e933
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:05:42 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:05:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
12:05:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
12:05:44 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
12:05:45 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
12:05:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$5b0ade56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$e5a8e7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$8bbb8edd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$6f37ce22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:46 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d543a9: startup date [Mon Aug 05 12:05:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cc6211
12:05:46 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$649058b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$261d1cec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$a9ffc7c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$f50dc7a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$229e8914] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$29ee0e0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13db6acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:05:48 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
12:05:48 [main] INFO  StandardService - Starting service [Tomcat]
12:05:48 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
12:05:49 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
12:05:49 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
12:05:49 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 8719 ms
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
12:05:51 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
12:05:51 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
12:05:52 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ab804f: startup date [Mon Aug 05 12:05:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cc6211
12:05:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:05:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1506a79: startup date [Mon Aug 05 12:05:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cc6211
12:05:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:05:53 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
12:05:53 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
12:05:53 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
12:05:53 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12c5abd
12:05:54 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
12:05:54 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
12:05:55 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1cc6211: startup date [Mon Aug 05 12:05:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1c2e933
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
12:05:55 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
12:05:56 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
12:05:57 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:05:57 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:05:57 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:05:57 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:05:57 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
12:05:57 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:00 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:06:01 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
12:06:02 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
12:06:02 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
12:06:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
12:06:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
12:06:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
12:06:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
12:06:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
12:06:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
12:06:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
12:06:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
12:06:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1cc6211,type=ConfigurationPropertiesRebinder]
12:06:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
12:06:02 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
12:06:02 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
12:06:02 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
12:06:02 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
12:06:02 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
12:06:02 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
12:06:02 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
12:06:02 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
12:06:03 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:06:03 [main] INFO  DiscoveryClient - Disable delta property : false
12:06:03 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
12:06:03 [main] INFO  DiscoveryClient - Force full registry fetch : false
12:06:03 [main] INFO  DiscoveryClient - Application is null : false
12:06:03 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
12:06:03 [main] INFO  DiscoveryClient - Application version is -1: true
12:06:03 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
12:06:03 [main] INFO  DiscoveryClient - The response status is 200
12:06:03 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
12:06:03 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
12:06:03 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564977963703 with initial instances count: 17
12:06:03 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
12:06:03 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564977963735, current=UP, previous=STARTING]
12:06:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
12:06:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
12:06:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
12:06:03 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
12:06:03 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
12:06:03 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
12:06:03 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
12:06:03 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
12:06:03 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
12:06:03 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
12:06:03 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 26.127 seconds (JVM running for 31.092)
12:06:22 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
12:06:22 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
12:06:22 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
12:06:22 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
12:06:30 [http-nio-8083-exec-1] ERROR [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/dlsb] threw exception [Filtered request failed.] with root cause
java.net.SocketTimeoutException: connect timed out
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at redis.clients.jedis.Connection.connect(Connection.java:184)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:93)
	at redis.clients.jedis.Connection.sendCommand(Connection.java:126)
	at redis.clients.jedis.Connection.sendCommand(Connection.java:121)
	at redis.clients.jedis.BinaryClient.quit(BinaryClient.java:124)
	at redis.clients.jedis.BinaryJedis.quit(BinaryJedis.java:252)
	at org.springframework.data.redis.connection.jedis.JedisConnection.close(JedisConnection.java:325)
	at org.springframework.data.redis.core.RedisConnectionUtils.releaseConnection(RedisConnectionUtils.java:212)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:217)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:169)
	at org.springframework.data.redis.core.RedisTemplate.expire(RedisTemplate.java:670)
	at org.springframework.data.redis.core.DefaultBoundKeyOperations.expire(DefaultBoundKeyOperations.java:45)
	at com.dc.shiro.redis.ShiroCache.get(ShiroCache.java:36)
	at org.apache.shiro.session.mgt.eis.CachingSessionDAO.getCachedSession(CachingSessionDAO.java:217)
	at org.apache.shiro.session.mgt.eis.CachingSessionDAO.getCachedSession(CachingSessionDAO.java:202)
	at org.apache.shiro.session.mgt.eis.CachingSessionDAO.readSession(CachingSessionDAO.java:259)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
	at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
	at org.apache.shiro.subject.support.DefaultSubjectContext.resolvePrincipals(DefaultSubjectContext.java:164)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:487)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:342)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dc.common.xss.XssFilter.doFilter(XssFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
12:06:38 [DiscoveryClient-HeartbeatExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
12:06:38 [DiscoveryClient-CacheRefreshExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
12:06:38 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
12:06:38 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
12:06:40 [DiscoveryClient-HeartbeatExecutor-0] INFO  RetryableEurekaHttpClient - Request execution succeeded on retry #1
12:06:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  RetryableEurekaHttpClient - Request execution succeeded on retry #1
12:07:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1173f63: startup date [Mon Aug 05 12:07:51 CST 2019]; root of context hierarchy
12:07:51 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
12:07:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:07:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40f5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:52 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
12:07:52 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872: startup date [Mon Aug 05 12:07:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1173f63
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
12:07:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
12:07:53 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
12:07:54 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
12:07:54 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$4b3ec71e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d5dcd08b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$7bef77a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$5f6bb6ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a3def8: startup date [Mon Aug 05 12:07:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872
12:07:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$54c44180] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$165105b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$9a33b08f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e541b070] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$12d271dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1a21f6d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40f5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
12:07:56 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
12:07:56 [main] INFO  StandardService - Starting service [Tomcat]
12:07:56 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
12:07:57 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
12:07:57 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
12:07:57 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4876 ms
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
12:07:58 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
12:07:58 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
12:07:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ba9e41: startup date [Mon Aug 05 12:07:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872
12:07:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:07:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cdcae0: startup date [Mon Aug 05 12:07:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872
12:07:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:07:59 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
12:07:59 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
12:07:59 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
12:07:59 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b42c1c
12:08:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
12:08:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
12:08:00 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872: startup date [Mon Aug 05 12:07:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1173f63
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
12:08:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
12:08:01 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
12:08:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:08:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:08:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:08:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:08:02 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
12:08:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
12:08:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
12:08:05 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
12:08:06 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
12:08:06 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
12:08:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
12:08:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
12:08:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
12:08:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
12:08:06 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
12:08:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
12:08:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
12:08:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
12:08:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1824872,type=ConfigurationPropertiesRebinder]
12:08:06 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
12:08:06 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
12:08:06 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
12:08:06 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
12:08:06 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
12:08:06 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
12:08:06 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
12:08:07 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
12:08:07 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
12:08:07 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:08:07 [main] INFO  DiscoveryClient - Disable delta property : false
12:08:07 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
12:08:07 [main] INFO  DiscoveryClient - Force full registry fetch : false
12:08:07 [main] INFO  DiscoveryClient - Application is null : false
12:08:07 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
12:08:07 [main] INFO  DiscoveryClient - Application version is -1: true
12:08:07 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
12:08:07 [main] INFO  DiscoveryClient - The response status is 200
12:08:07 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
12:08:07 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
12:08:07 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564978087908 with initial instances count: 17
12:08:07 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
12:08:07 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564978087940, current=UP, previous=STARTING]
12:08:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
12:08:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
12:08:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
12:08:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
12:08:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
12:08:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
12:08:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
12:08:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
12:08:08 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
12:08:08 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
12:08:08 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
12:08:08 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
12:08:08 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
12:08:08 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
12:08:08 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
12:08:08 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.768 seconds (JVM running for 19.55)
12:08:26 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
12:08:26 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
12:08:26 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
12:08:26 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
12:08:27 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59071d: startup date [Mon Aug 05 12:08:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872
12:08:27 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:08:27 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:08:27 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
12:08:28 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
12:08:28 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
12:08:28 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:08:28 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@d846c7
12:08:29 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61a076: startup date [Mon Aug 05 12:08:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1824872
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:08:31 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@124bfd9
12:08:32 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
12:13:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:18:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:23:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:28:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:33:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:38:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:43:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:48:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:53:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
12:58:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:03:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:08:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:08:26 [SessionValidationThread-1] INFO  AbstractValidatingSessionManager - Validating all active sessions...
13:13:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:18:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:23:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:28:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:33:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:36:46 [DiscoveryClient-CacheRefreshExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
13:36:46 [DiscoveryClient-HeartbeatExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
13:36:46 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
13:36:46 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
13:36:51 [DiscoveryClient-CacheRefreshExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 common frames omitted
13:36:51 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
13:36:51 [DiscoveryClient-HeartbeatExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 common frames omitted
13:36:51 [DiscoveryClient-CacheRefreshExecutor-0] ERROR DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
13:36:51 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
13:36:51 [DiscoveryClient-HeartbeatExecutor-0] ERROR DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
13:38:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:43:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:48:07 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:51:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224: startup date [Mon Aug 05 13:51:51 CST 2019]; root of context hierarchy
13:51:51 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
13:51:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:51:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0975062] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:52 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
13:51:52 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996: startup date [Mon Aug 05 13:51:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
13:51:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
13:51:54 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
13:51:54 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
13:51:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$17c6c3ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$a264cd5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$48777474] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$2bf3b3b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@82f1eb: startup date [Mon Aug 05 13:51:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996
13:51:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$214c3e4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$e2d90283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$66bbad5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$b1c9ad3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$df5a6eab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e6a9f3a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0975062] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:51:56 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
13:51:56 [main] INFO  StandardService - Starting service [Tomcat]
13:51:56 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
13:51:57 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
13:51:57 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
13:51:57 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4876 ms
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
13:51:58 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
13:51:58 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
13:51:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a84ea8: startup date [Mon Aug 05 13:51:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996
13:51:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:51:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18d42d1: startup date [Mon Aug 05 13:51:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996
13:51:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:52:00 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
13:52:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
13:52:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13:52:00 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@184b088
13:52:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
13:52:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
13:52:01 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996: startup date [Mon Aug 05 13:51:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@142c224
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
13:52:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
13:52:02 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
13:52:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:52:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:52:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:52:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:52:02 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
13:52:03 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
13:52:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
13:52:06 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
13:52:06 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
13:52:06 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
13:52:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
13:52:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
13:52:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
13:52:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
13:52:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
13:52:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
13:52:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
13:52:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
13:52:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=aa4996,type=ConfigurationPropertiesRebinder]
13:52:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
13:52:07 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
13:52:07 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
13:52:07 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
13:52:07 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
13:52:07 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
13:52:07 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
13:52:07 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
13:52:07 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
13:52:07 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
13:52:08 [main] INFO  DiscoveryClient - Disable delta property : false
13:52:08 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
13:52:08 [main] INFO  DiscoveryClient - Force full registry fetch : false
13:52:08 [main] INFO  DiscoveryClient - Application is null : false
13:52:08 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
13:52:08 [main] INFO  DiscoveryClient - Application version is -1: true
13:52:08 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
13:52:08 [main] INFO  DiscoveryClient - The response status is 200
13:52:08 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
13:52:08 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
13:52:08 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564984328406 with initial instances count: 17
13:52:08 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
13:52:08 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564984328437, current=UP, previous=STARTING]
13:52:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
13:52:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
13:52:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
13:52:08 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
13:52:08 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
13:52:08 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
13:52:08 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
13:52:08 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
13:52:08 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
13:52:08 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
13:52:08 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 17.846 seconds (JVM running for 19.567)
13:52:29 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
13:52:29 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
13:52:29 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
13:52:29 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
13:52:33 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b3c073: startup date [Mon Aug 05 13:52:33 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996
13:52:33 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:52:33 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:52:33 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
13:52:33 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
13:52:33 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
13:52:33 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:52:33 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7cda44
13:52:34 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d44c9d: startup date [Mon Aug 05 13:52:49 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aa4996
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:52:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@932401
13:52:50 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
13:57:08 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:02:08 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:07:08 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:08:13 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee: startup date [Mon Aug 05 14:08:13 CST 2019]; root of context hierarchy
14:08:13 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:08:13 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:13 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1f9d6e5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:14 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:08:14 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289: startup date [Mon Aug 05 14:08:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:08:15 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:08:16 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:08:16 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:08:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$66cce1e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$f16aeb55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$977d926f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$7af9d1b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b711b6: startup date [Mon Aug 05 14:08:17 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289
14:08:17 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$70525c4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$31df207e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$b5c1cb59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$cfcb3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2e608ca6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$35b011a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1f9d6e5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:08:18 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:08:18 [main] INFO  StandardService - Starting service [Tomcat]
14:08:18 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:08:19 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:08:19 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:08:19 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5203 ms
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:08:20 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:08:20 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:08:21 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@26aa35: startup date [Mon Aug 05 14:08:21 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289
14:08:21 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:21 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9d8fd6: startup date [Mon Aug 05 14:08:21 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289
14:08:21 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:22 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:08:22 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:08:22 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:08:22 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@72c82a
14:08:23 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:08:23 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:08:23 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289: startup date [Mon Aug 05 14:08:14 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c11eee
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:08:23 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:08:24 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:08:24 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:08:24 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:08:24 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:08:24 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:08:24 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:08:25 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:08:27 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:08:28 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:08:28 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:08:29 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:08:29 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:08:29 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:08:29 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:08:29 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:08:29 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:08:29 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:08:29 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:08:29 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:08:29 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=138a289,type=ConfigurationPropertiesRebinder]
14:08:29 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:08:29 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:08:29 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:08:29 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:08:29 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:08:29 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:08:29 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:08:29 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:08:29 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:08:30 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:08:30 [main] INFO  DiscoveryClient - Disable delta property : false
14:08:30 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:08:30 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:08:30 [main] INFO  DiscoveryClient - Application is null : false
14:08:30 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:08:30 [main] INFO  DiscoveryClient - Application version is -1: true
14:08:30 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:08:30 [main] INFO  DiscoveryClient - The response status is 200
14:08:30 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:08:30 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:08:30 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564985310562 with initial instances count: 17
14:08:30 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:08:30 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564985310593, current=UP, previous=STARTING]
14:08:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:08:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:08:30 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:08:30 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:08:30 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:08:30 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:08:30 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:08:30 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:08:30 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:08:30 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:08:30 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.325 seconds (JVM running for 20.854)
14:08:49 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:08:49 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:08:49 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
14:08:49 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:08:52 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1554a73: startup date [Mon Aug 05 14:08:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289
14:08:52 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:08:53 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:08:53 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
14:08:53 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:08:53 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:08:53 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:08:53 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@11d01a0
14:08:54 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1218b3e: startup date [Mon Aug 05 14:09:01 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@138a289
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:09:01 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1045805
14:09:02 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:11:16 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@550889: startup date [Mon Aug 05 14:11:16 CST 2019]; root of context hierarchy
14:11:16 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:11:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5edb24f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:17 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:11:17 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b: startup date [Mon Aug 05 14:11:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@550889
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:11:18 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:11:19 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:11:19 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:11:19 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$4d1d25da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d7bb2f47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$7dcdd661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$614a15a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@199dc60: startup date [Mon Aug 05 14:11:20 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
14:11:20 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$56a2a03c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$182f6470] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$9c120f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e7200f2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$14b0d098] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1c005593] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5edb24f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:11:22 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:11:22 [main] INFO  StandardService - Starting service [Tomcat]
14:11:22 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:11:22 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:11:22 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:11:22 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5188 ms
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:11:23 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:11:24 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:11:24 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@99b656: startup date [Mon Aug 05 14:11:24 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
14:11:24 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:25 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16a7ec6: startup date [Mon Aug 05 14:11:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
14:11:25 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:25 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:11:25 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:11:25 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:11:25 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@508ba6
14:11:26 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:11:26 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:11:26 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b: startup date [Mon Aug 05 14:11:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@550889
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:11:26 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:11:27 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:11:27 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:11:28 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:11:28 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:11:28 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:11:28 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:11:28 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:11:28 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:11:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:11:31 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:11:32 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:11:32 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:11:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:11:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:11:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:11:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:11:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:11:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:11:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:11:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:11:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=a903b,type=ConfigurationPropertiesRebinder]
14:11:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:11:32 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:11:32 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:11:32 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:11:32 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:11:32 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:11:32 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:11:32 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:11:32 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:11:33 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:11:33 [main] INFO  DiscoveryClient - Disable delta property : false
14:11:33 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:11:33 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:11:33 [main] INFO  DiscoveryClient - Application is null : false
14:11:33 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:11:33 [main] INFO  DiscoveryClient - Application version is -1: true
14:11:33 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:11:33 [main] INFO  DiscoveryClient - The response status is 200
14:11:33 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:11:33 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:11:33 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564985493656 with initial instances count: 17
14:11:33 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:11:33 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564985493687, current=UP, previous=STARTING]
14:11:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:11:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:11:33 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:11:33 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:11:33 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:11:33 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:11:33 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:11:33 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:11:33 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:11:33 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:11:33 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.478 seconds (JVM running for 20.686)
14:11:49 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:11:49 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:11:49 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
14:11:50 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:11:53 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@244a53: startup date [Mon Aug 05 14:11:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
14:11:53 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:11:54 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:11:54 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
14:11:54 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:11:54 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:11:54 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:11:54 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1feeaed
14:11:55 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c7487: startup date [Mon Aug 05 14:12:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:12:02 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@15bd3ff
14:12:03 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:16:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:21:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:22:11 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee: startup date [Mon Aug 05 14:22:11 CST 2019]; root of context hierarchy
14:22:11 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:22:11 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:22:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ee0f58c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:12 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:22:12 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5: startup date [Mon Aug 05 14:22:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:22:13 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:22:13 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:22:14 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:22:14 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:14 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$353ecc54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$bfdcd5c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$65ef7cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$496bbc20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@592729: startup date [Mon Aug 05 14:22:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5
14:22:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$3ec446b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$510aea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$8433b5c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$cf41b5a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$fcd27712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:15 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$421fc0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ee0f58c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:22:16 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:22:16 [main] INFO  StandardService - Starting service [Tomcat]
14:22:16 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:22:17 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:22:17 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:22:17 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4958 ms
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:22:18 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:22:18 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:22:19 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a4db4f: startup date [Mon Aug 05 14:22:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5
14:22:19 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:22:19 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1dba7a0: startup date [Mon Aug 05 14:22:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5
14:22:19 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:22:19 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:22:20 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:22:20 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:22:20 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1375bdf
14:22:20 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:22:20 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:22:21 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5: startup date [Mon Aug 05 14:22:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b3fee
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:22:21 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:22:21 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:22:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:22:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:22:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:22:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:22:22 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:22:22 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:22:25 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:22:26 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:22:26 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:22:26 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:22:26 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:22:26 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:22:26 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:22:26 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:22:26 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:22:26 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:22:26 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:22:26 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:22:26 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1d0b0e5,type=ConfigurationPropertiesRebinder]
14:22:26 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:22:26 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:22:26 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:22:26 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:22:27 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:22:27 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:22:27 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:22:27 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:22:27 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:22:27 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:22:28 [main] INFO  DiscoveryClient - Disable delta property : false
14:22:28 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:22:28 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:22:28 [main] INFO  DiscoveryClient - Application is null : false
14:22:28 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:22:28 [main] INFO  DiscoveryClient - Application version is -1: true
14:22:28 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:22:28 [main] INFO  DiscoveryClient - The response status is 200
14:22:28 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:22:28 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:22:28 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564986148469 with initial instances count: 17
14:22:28 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:22:28 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564986148500, current=UP, previous=STARTING]
14:22:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:22:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:22:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:22:28 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:22:28 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:22:28 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:22:28 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:22:28 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:22:28 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:22:28 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:22:28 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.461 seconds (JVM running for 20.287)
14:23:11 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:23:11 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:23:11 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
14:23:11 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:23:12 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d3daff: startup date [Mon Aug 05 14:23:12 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5
14:23:12 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:23:12 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:23:12 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
14:23:12 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:23:12 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:23:12 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:23:12 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@15884b6
14:23:13 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@adbdff: startup date [Mon Aug 05 14:23:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1d0b0e5
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:23:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1f9e142
14:23:17 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:27:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:32:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:37:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:42:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:47:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:52:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:57:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:02:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:07:28 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:08:25 [hystrix-OMS-DLSB-SERVICE-RM-9] WARN  BaseLoadBalancer - LoadBalancer [OMS-DLSB-SERVICE-RM]:  Error choosing server for key null
java.lang.IndexOutOfBoundsException: index (1) must be less than size (1)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:310)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:292)
	at com.google.common.collect.SingletonImmutableList.get(SingletonImmutableList.java:45)
	at com.netflix.loadbalancer.AbstractServerPredicate.chooseRoundRobinAfterFiltering(AbstractServerPredicate.java:203)
	at com.netflix.loadbalancer.PredicateBasedRule.choose(PredicateBasedRule.java:45)
	at com.netflix.loadbalancer.BaseLoadBalancer.chooseServer(BaseLoadBalancer.java:736)
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:113)
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:481)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
15:09:47 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d645b1: startup date [Mon Aug 05 15:09:47 CST 2019]; root of context hierarchy
15:09:47 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:09:47 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:09:47 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b749c508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:49 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:09:49 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b: startup date [Mon Aug 05 15:09:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d645b1
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:09:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:09:52 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:09:53 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
15:09:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$fe793893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$89174200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$2f29e91a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$12a6285f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:54 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ed18ec: startup date [Mon Aug 05 15:09:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
15:09:54 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$7feb2f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$c98b7729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$4d6e2204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$987c21e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$c60ce351] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$cd5c684c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b749c508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:56 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:09:56 [main] INFO  StandardService - Starting service [Tomcat]
15:09:56 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:09:57 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:09:57 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:09:57 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 7485 ms
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:09:58 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:09:58 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:09:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c8689e: startup date [Mon Aug 05 15:09:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
15:09:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:09:59 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1689c81: startup date [Mon Aug 05 15:09:59 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
15:09:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:09:59 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:10:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:10:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:10:00 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1577ab8
15:10:00 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:10:00 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:10:01 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b: startup date [Mon Aug 05 15:09:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@d645b1
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:10:01 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:10:01 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:10:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:02 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:02 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:10:03 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:10:05 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:10:06 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:10:06 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:10:07 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:10:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:10:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:10:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:10:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:10:07 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:10:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:10:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:10:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:10:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=a903b,type=ConfigurationPropertiesRebinder]
15:10:07 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:10:07 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:10:07 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:10:07 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:10:07 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:10:07 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:10:07 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:10:07 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:10:07 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:10:08 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:10:08 [main] INFO  DiscoveryClient - Disable delta property : false
15:10:08 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:10:08 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:10:08 [main] INFO  DiscoveryClient - Application is null : false
15:10:08 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:10:08 [main] INFO  DiscoveryClient - Application version is -1: true
15:10:08 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:10:08 [main] INFO  DiscoveryClient - The response status is 200
15:10:08 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:10:08 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:10:08 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564989008820 with initial instances count: 17
15:10:08 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:10:08 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564989008857, current=UP, previous=STARTING]
15:10:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:10:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:10:08 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:10:08 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:10:08 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:10:08 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:10:08 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:10:09 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:10:09 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:10:09 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:10:09 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 23.261 seconds (JVM running for 26.538)
15:10:47 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
15:10:47 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
15:10:47 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
15:10:47 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
15:10:48 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f0d33f: startup date [Mon Aug 05 15:10:48 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
15:10:48 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:10:48 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:10:48 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
15:10:48 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:10:48 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:10:48 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:10:48 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@aa42a6
15:10:49 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31ab3d: startup date [Mon Aug 05 15:10:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@a903b
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:10:52 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075, 10.52.2.101:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1bea3b5
15:10:53 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:15:08 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:16:49 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cd267f: startup date [Mon Aug 05 15:16:49 CST 2019]; root of context hierarchy
15:16:49 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:16:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:16:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8e1e6a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:50 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:16:50 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826: startup date [Mon Aug 05 15:16:50 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cd267f
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:16:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:16:51 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:16:52 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
15:16:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:52 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$50115a31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$daaf639e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$80c20ab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$643e49fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b711b6: startup date [Mon Aug 05 15:16:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826
15:16:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$5996d493] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$1b2398c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$9f0643a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$ea144383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$17a504ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1ef489ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8e1e6a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:16:54 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:16:54 [main] INFO  StandardService - Starting service [Tomcat]
15:16:54 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:16:55 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:16:55 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:16:55 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4940 ms
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:16:56 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:16:56 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:16:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9338f3: startup date [Mon Aug 05 15:16:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826
15:16:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:16:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1667b59: startup date [Mon Aug 05 15:16:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826
15:16:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:16:57 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:16:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:16:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:16:58 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1de32cb
15:16:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:16:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:16:59 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826: startup date [Mon Aug 05 15:16:50 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cd267f
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:16:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:16:59 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:17:00 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:00 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:00 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:00 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:00 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:17:00 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:17:03 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:04 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:17:04 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:17:05 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:17:05 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:17:05 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:17:05 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:17:05 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:17:05 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:17:05 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:17:05 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:17:05 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:17:05 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=106d826,type=ConfigurationPropertiesRebinder]
15:17:05 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:17:05 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:17:05 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:17:05 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:17:05 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:17:05 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:17:05 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:17:05 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:17:05 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:17:06 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:17:06 [main] INFO  DiscoveryClient - Disable delta property : false
15:17:06 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:17:06 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:17:06 [main] INFO  DiscoveryClient - Application is null : false
15:17:06 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:17:06 [main] INFO  DiscoveryClient - Application version is -1: true
15:17:06 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:17:06 [main] INFO  DiscoveryClient - The response status is 200
15:17:06 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:17:06 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:17:06 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564989426956 with initial instances count: 17
15:17:06 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:17:06 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564989426987, current=UP, previous=STARTING]
15:17:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:17:07 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:17:07 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:17:07 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:17:07 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:17:07 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:17:07 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:17:07 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:17:07 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:17:07 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:17:07 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.897 seconds (JVM running for 20.799)
15:22:01 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
15:22:01 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
15:22:01 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
15:22:01 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
15:22:02 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a6c95: startup date [Mon Aug 05 15:22:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826
15:22:02 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:22:02 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:02 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
15:22:02 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:22:02 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:22:02 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:02 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1bb4e77
15:22:03 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:06 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d2d517: startup date [Mon Aug 05 15:22:06 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d826
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:22:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@23d396
15:22:07 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:25:04 [hystrix-OMS-DLSB-SERVICE-RM-6] WARN  BaseLoadBalancer - LoadBalancer [OMS-DLSB-SERVICE-RM]:  Error choosing server for key null
java.lang.IndexOutOfBoundsException: index (1) must be less than size (1)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:310)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:292)
	at com.google.common.collect.SingletonImmutableList.get(SingletonImmutableList.java:45)
	at com.netflix.loadbalancer.AbstractServerPredicate.chooseRoundRobinAfterFiltering(AbstractServerPredicate.java:203)
	at com.netflix.loadbalancer.PredicateBasedRule.choose(PredicateBasedRule.java:45)
	at com.netflix.loadbalancer.BaseLoadBalancer.chooseServer(BaseLoadBalancer.java:736)
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:113)
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:481)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
15:27:06 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:31:26 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d6d4b7: startup date [Mon Aug 05 15:31:26 CST 2019]; root of context hierarchy
15:31:26 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:31:27 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:31:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$17d4df37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:28 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:31:28 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6c4dc: startup date [Mon Aug 05 15:31:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d6d4b7
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:31:29 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:31:29 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:31:30 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
15:31:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:30 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$5f0452c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$e9a25c2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$8fb50349] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$7331428e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1aad59a: startup date [Mon Aug 05 15:31:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6c4dc
15:31:31 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$6889cd24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$2a169158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$adf93c33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$f9073c14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2697fd80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:31 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:32 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2de7827b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:32 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$17d4df37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:31:32 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:31:32 [main] INFO  StandardService - Starting service [Tomcat]
15:31:32 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:31:33 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:31:33 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:31:33 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5218 ms
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:31:34 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:31:34 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:31:35 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@51dc38: startup date [Mon Aug 05 15:31:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6c4dc
15:31:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:31:35 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e9c048: startup date [Mon Aug 05 15:31:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6c4dc
15:31:35 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:31:35 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:31:36 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:31:36 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:31:36 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@8fe7db
15:31:36 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:31:36 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:31:37 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6c4dc: startup date [Mon Aug 05 15:31:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1d6d4b7
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:31:37 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:31:38 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:31:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:31:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:31:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:31:38 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:31:38 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:31:39 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:41 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:31:42 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:31:42 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:31:43 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:31:43 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:31:43 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:31:43 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:31:43 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:31:43 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:31:43 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:31:43 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:31:43 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:31:43 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=e6c4dc,type=ConfigurationPropertiesRebinder]
15:31:43 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:31:43 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:31:43 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:31:43 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:31:43 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:31:43 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:31:43 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:31:43 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:31:43 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:31:44 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:31:44 [main] INFO  DiscoveryClient - Disable delta property : false
15:31:44 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:31:44 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:31:44 [main] INFO  DiscoveryClient - Application is null : false
15:31:44 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:31:44 [main] INFO  DiscoveryClient - Application version is -1: true
15:31:44 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:31:44 [main] INFO  DiscoveryClient - The response status is 200
15:31:44 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:31:44 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:31:44 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564990304776 with initial instances count: 17
15:31:44 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:31:44 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564990304808, current=UP, previous=STARTING]
15:31:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:31:44 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:31:44 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:31:44 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:31:44 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:31:44 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:31:44 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:31:44 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
15:31:45 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:31:45 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:31:45 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 19.225 seconds (JVM running for 21.054)
15:36:44 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:41:44 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:46:44 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:51:44 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:54:38 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@183159f: startup date [Mon Aug 05 15:54:38 CST 2019]; root of context hierarchy
15:54:38 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:54:38 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:54:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$36e5f7e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:39 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:54:39 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252: startup date [Mon Aug 05 15:54:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@183159f
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:54:40 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:54:41 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:54:42 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
15:54:42 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$7e156b6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$8b374da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$aec61bf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$92425b39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e45b6c: startup date [Mon Aug 05 15:54:42 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252
15:54:42 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$879ae5cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:42 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$4927aa03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$cd0a54de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$181854bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$45a9162b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4cf89b26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:43 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$36e5f7e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:54:44 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:54:44 [main] INFO  StandardService - Starting service [Tomcat]
15:54:44 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:54:44 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:54:44 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:54:44 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5257 ms
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:54:45 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:54:46 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:54:47 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6766fd: startup date [Mon Aug 05 15:54:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252
15:54:47 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:54:47 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b891de: startup date [Mon Aug 05 15:54:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252
15:54:47 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:54:47 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:54:47 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:54:47 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:54:47 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@110a2c7
15:54:48 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:54:48 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:54:48 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252: startup date [Mon Aug 05 15:54:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@183159f
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:54:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:54:49 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:54:50 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:54:50 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:54:50 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:54:50 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:54:50 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:54:50 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:54:53 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:54:54 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:54:54 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:54:54 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:54:54 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:54:54 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:54:54 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:54:54 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:54:54 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:54:54 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:54:54 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:54:54 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:54:54 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=d7b252,type=ConfigurationPropertiesRebinder]
15:54:54 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:54:54 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:54:54 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:54:54 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:54:55 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:54:55 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:54:55 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:54:55 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:54:55 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:54:55 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:54:55 [main] INFO  DiscoveryClient - Disable delta property : false
15:54:55 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:54:55 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:54:55 [main] INFO  DiscoveryClient - Application is null : false
15:54:55 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:54:55 [main] INFO  DiscoveryClient - Application version is -1: true
15:54:55 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:54:56 [main] INFO  DiscoveryClient - The response status is 200
15:54:56 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:54:56 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:54:56 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564991696264 with initial instances count: 17
15:54:56 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:54:56 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564991696298, current=UP, previous=STARTING]
15:54:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:54:56 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:54:56 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:54:56 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:54:56 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:54:56 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:54:56 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:54:56 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:54:56 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:54:56 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:54:56 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.971 seconds (JVM running for 21.02)
15:55:42 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
15:55:42 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
15:55:42 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
15:55:42 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
15:55:46 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f85615: startup date [Mon Aug 05 15:55:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252
15:55:46 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:55:47 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:55:47 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
15:55:47 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:55:47 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:55:47 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:55:47 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@286cdf
15:55:48 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7b35d9: startup date [Mon Aug 05 15:56:06 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@d7b252
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:56:06 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@597df6
15:56:07 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:59:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:04:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:09:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:14:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:19:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:24:55 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:29:06 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18bc345: startup date [Mon Aug 05 16:29:06 CST 2019]; root of context hierarchy
16:29:06 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
16:29:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:07 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dd60ec3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:07 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
16:29:07 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1: startup date [Mon Aug 05 16:29:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18bc345
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:29:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:29:09 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
16:29:10 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
16:29:10 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$24905fca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$af2e6937] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$55411051] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$38bd4f96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:10 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@184ade: startup date [Mon Aug 05 16:29:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:29:10 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$2e15da2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$efa29e60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$7385493b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$be93491c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$ec240a88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f3738f83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dd60ec3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:12 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
16:29:12 [main] INFO  StandardService - Starting service [Tomcat]
16:29:12 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
16:29:12 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16:29:12 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
16:29:12 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4967 ms
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
16:29:13 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
16:29:14 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
16:29:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@e0ba7: startup date [Mon Aug 05 16:29:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:29:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12ea86b: startup date [Mon Aug 05 16:29:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:29:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:15 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
16:29:15 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:29:15 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:29:15 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1028e45
16:29:16 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:29:16 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:29:16 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1: startup date [Mon Aug 05 16:29:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18bc345
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:29:17 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:29:17 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
16:29:17 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:17 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:17 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:17 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:18 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
16:29:18 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:29:20 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:21 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:29:22 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
16:29:22 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
16:29:22 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:29:22 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:29:22 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
16:29:22 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:29:22 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
16:29:22 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:29:22 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:29:22 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:29:22 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=f283e1,type=ConfigurationPropertiesRebinder]
16:29:22 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:29:22 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
16:29:22 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
16:29:22 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
16:29:22 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
16:29:22 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
16:29:22 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
16:29:22 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
16:29:22 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
16:29:23 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:29:23 [main] INFO  DiscoveryClient - Disable delta property : false
16:29:23 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
16:29:23 [main] INFO  DiscoveryClient - Force full registry fetch : false
16:29:23 [main] INFO  DiscoveryClient - Application is null : false
16:29:23 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
16:29:23 [main] INFO  DiscoveryClient - Application version is -1: true
16:29:23 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
16:29:23 [main] INFO  DiscoveryClient - The response status is 200
16:29:23 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
16:29:23 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
16:29:23 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564993763763 with initial instances count: 17
16:29:23 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
16:29:23 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564993763795, current=UP, previous=STARTING]
16:29:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:29:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:29:23 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:29:23 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
16:29:23 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
16:29:23 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
16:29:23 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
16:29:23 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
16:29:23 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
16:29:23 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
16:29:23 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 18.108 seconds (JVM running for 20.103)
16:34:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:39:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:44:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:49:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:54:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:59:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:04:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:09:23 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:15:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a: startup date [Mon Aug 05 17:15:51 CST 2019]; root of context hierarchy
17:15:51 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
17:15:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:51 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:52 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
17:15:52 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Mon Aug 05 17:15:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
17:15:53 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
17:15:53 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
17:15:54 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
17:15:54 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$6df2f1b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$f890fb26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$9ea3a240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$821fe185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:54 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e4bb60: startup date [Mon Aug 05 17:15:54 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
17:15:54 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$77786c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$3905304f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$bce7db2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$7f5db0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$35869c77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3cd62172] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:15:55 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
17:15:55 [main] INFO  StandardService - Starting service [Tomcat]
17:15:55 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
17:15:56 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
17:15:56 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
17:15:56 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4193 ms
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
17:15:57 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
17:15:57 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
17:15:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@182206a: startup date [Mon Aug 05 17:15:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
17:15:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@db9048: startup date [Mon Aug 05 17:15:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
17:15:58 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:58 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
17:15:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
17:15:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:15:58 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@176ef56
17:15:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
17:15:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:15:58 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Mon Aug 05 17:15:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDcConfigIndex()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/findCfgData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.findCfgData(java.lang.Integer,java.lang.Integer)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:15:59 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:15:59 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
17:15:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:16:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:16:02 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
17:16:02 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
17:16:02 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
17:16:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:16:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:16:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
17:16:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:16:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
17:16:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:16:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:16:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:16:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=183eae2,type=ConfigurationPropertiesRebinder]
17:16:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:16:02 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
17:16:02 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
17:16:02 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
17:16:02 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
17:16:02 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
17:16:02 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
17:16:02 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
17:16:02 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
17:16:03 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:16:03 [main] INFO  DiscoveryClient - Disable delta property : false
17:16:03 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
17:16:03 [main] INFO  DiscoveryClient - Force full registry fetch : false
17:16:03 [main] INFO  DiscoveryClient - Application is null : false
17:16:03 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
17:16:03 [main] INFO  DiscoveryClient - Application version is -1: true
17:16:03 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
17:16:03 [main] INFO  DiscoveryClient - The response status is 200
17:16:03 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
17:16:03 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
17:16:03 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564996563515 with initial instances count: 17
17:16:03 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
17:16:03 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564996563534, current=UP, previous=STARTING]
17:16:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083: registering service...
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:16:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.101:8083 - registration status: 204
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:16:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:16:03 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
17:16:03 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
17:16:03 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
17:16:03 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
17:16:03 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
17:16:03 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
17:16:03 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
17:16:03 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 13.327 seconds (JVM running for 14.859)
17:17:06 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
17:17:06 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
17:17:06 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
17:17:06 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
17:17:10 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c8afbf: startup date [Mon Aug 05 17:17:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
17:17:10 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:17:10 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:17:10 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
17:17:10 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:17:10 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
17:17:10 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:17:10 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@15d0d71
17:17:11 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c870ec: startup date [Mon Aug 05 17:17:18 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:17:18 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.101:8075, 10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:10.52.2.101:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1803d91
17:17:19 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:19:23 [hystrix-OMS-DLSB-SERVICE-RM-6] WARN  BaseLoadBalancer - LoadBalancer [OMS-DLSB-SERVICE-RM]:  Error choosing server for key null
java.lang.IndexOutOfBoundsException: index (1) must be less than size (1)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:310)
	at com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:292)
	at com.google.common.collect.SingletonImmutableList.get(SingletonImmutableList.java:45)
	at com.netflix.loadbalancer.AbstractServerPredicate.chooseRoundRobinAfterFiltering(AbstractServerPredicate.java:203)
	at com.netflix.loadbalancer.PredicateBasedRule.choose(PredicateBasedRule.java:45)
	at com.netflix.loadbalancer.BaseLoadBalancer.chooseServer(BaseLoadBalancer.java:736)
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:113)
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:481)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10247)
	at rx.Observable.subscribe(Observable.java:10214)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:341)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10151)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
17:21:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:26:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:31:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:36:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:41:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:46:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:46:40 [DiscoveryClient-CacheRefreshExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1056)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1460)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1427)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
17:46:40 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
17:46:40 [DiscoveryClient-CacheRefreshExecutor-0] INFO  RetryableEurekaHttpClient - Request execution succeeded on retry #1
17:51:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:54:43 [DiscoveryClient-HeartbeatExecutor-0] ERROR RedirectingEurekaHttpClient - Request execution error
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:824)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
17:54:43 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: org.apache.http.conn.ConnectTimeoutException: Connect to 10.52.2.117:8761 timed out
17:54:43 [DiscoveryClient-HeartbeatExecutor-0] INFO  RetryableEurekaHttpClient - Request execution succeeded on retry #1
17:56:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:01:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:06:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:11:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:16:03 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
