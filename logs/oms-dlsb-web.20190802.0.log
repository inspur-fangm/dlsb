10:03:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17acd7b: startup date [Fri Aug 02 10:03:23 CST 2019]; root of context hierarchy
10:03:23 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
10:03:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ed8993] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:24 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
10:03:24 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e067de: startup date [Fri Aug 02 10:03:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@17acd7b
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:03:25 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:03:25 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:03:26 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
10:03:26 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$4a1cfd1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d4bb068b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$7acdada5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$5e49ecea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:26 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fa450f: startup date [Fri Aug 02 10:03:26 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e067de
10:03:26 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$53a27780] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$152f3bb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$9911e68f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e41fe670] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$11b0a7dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$19002cd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:27 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2ed8993] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:03:28 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
10:03:28 [main] INFO  StandardService - Starting service [Tomcat]
10:03:28 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
10:03:28 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:03:28 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
10:03:28 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4230 ms
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
10:03:29 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
10:03:29 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
10:03:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6e6d07: startup date [Fri Aug 02 10:03:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e067de
10:03:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1cadb32: startup date [Fri Aug 02 10:03:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e067de
10:03:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:03:30 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
10:03:30 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:03:30 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:03:30 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@738846
10:03:30 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:03:30 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:03:31 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e067de: startup date [Fri Aug 02 10:03:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@17acd7b
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:03:31 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:03:31 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
10:03:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:03:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:03:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:03:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:03:32 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:03:32 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:33 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:03:34 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
10:03:34 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
10:03:34 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:03:34 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:03:34 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:03:34 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
10:03:34 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:03:34 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
10:03:34 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:03:34 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:03:34 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:03:34 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e067de,type=ConfigurationPropertiesRebinder]
10:03:34 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:03:34 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
10:03:34 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
10:03:34 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
10:03:34 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
10:03:34 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
10:03:34 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
10:03:34 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
10:03:34 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
10:03:35 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:03:35 [main] INFO  DiscoveryClient - Disable delta property : false
10:03:35 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
10:03:35 [main] INFO  DiscoveryClient - Force full registry fetch : false
10:03:35 [main] INFO  DiscoveryClient - Application is null : false
10:03:35 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
10:03:35 [main] INFO  DiscoveryClient - Application version is -1: true
10:03:35 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
10:03:35 [main] INFO  DiscoveryClient - The response status is 200
10:03:35 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
10:03:35 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:03:35 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564711415507 with initial instances count: 4
10:03:35 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
10:03:35 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564711415522, current=UP, previous=STARTING]
10:03:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:03:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:03:35 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:03:35 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:03:35 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
10:03:35 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
10:03:35 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
10:03:35 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
10:03:35 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
10:03:35 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
10:03:35 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 12.922 seconds (JVM running for 14.449)
10:04:05 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
10:04:05 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
10:04:05 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
10:04:05 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
10:08:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:13:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:18:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:23:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:28:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:33:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:38:35 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:49:17 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a: startup date [Fri Aug 02 10:49:17 CST 2019]; root of context hierarchy
10:49:18 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
10:49:18 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:18 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
10:49:18 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Fri Aug 02 10:49:18 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:19 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
10:49:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:49:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
10:49:20 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:49:20 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
10:49:20 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$6df2f1b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$f890fb26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$9ea3a240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$821fe185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f4764d: startup date [Fri Aug 02 10:49:21 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
10:49:21 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$77786c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$3905304f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$bce7db2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$7f5db0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$35869c77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:21 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3cd62172] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:49:22 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
10:49:22 [main] INFO  StandardService - Starting service [Tomcat]
10:49:22 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
10:49:23 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
10:49:23 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
10:49:23 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 4084 ms
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
10:49:23 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
10:49:23 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
10:49:24 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@fb151a: startup date [Fri Aug 02 10:49:24 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
10:49:24 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:24 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@dfbbef: startup date [Fri Aug 02 10:49:24 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
10:49:24 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:49:24 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
10:49:24 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:49:24 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:49:24 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@fc5622
10:49:25 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
10:49:25 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
10:49:25 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Fri Aug 02 10:49:18 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:49:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:49:25 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
10:49:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:26 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:49:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
10:49:28 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
10:49:28 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
10:49:28 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
10:49:28 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:49:28 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
10:49:28 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
10:49:28 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
10:49:28 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
10:49:28 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
10:49:28 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
10:49:28 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
10:49:28 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
10:49:28 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=183eae2,type=ConfigurationPropertiesRebinder]
10:49:28 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
10:49:28 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
10:49:28 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
10:49:28 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
10:49:28 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
10:49:29 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
10:49:29 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
10:49:29 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
10:49:29 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
10:49:29 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
10:49:29 [main] INFO  DiscoveryClient - Disable delta property : false
10:49:29 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
10:49:29 [main] INFO  DiscoveryClient - Force full registry fetch : false
10:49:29 [main] INFO  DiscoveryClient - Application is null : false
10:49:29 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
10:49:29 [main] INFO  DiscoveryClient - Application version is -1: true
10:49:29 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
10:49:29 [main] INFO  DiscoveryClient - The response status is 200
10:49:29 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
10:49:29 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
10:49:29 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564714169810 with initial instances count: 8
10:49:29 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
10:49:29 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564714169826, current=UP, previous=STARTING]
10:49:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
10:49:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
10:49:29 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
10:49:29 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:49:29 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
10:49:29 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
10:49:29 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
10:49:29 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
10:49:29 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
10:49:29 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
10:49:29 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 12.911 seconds (JVM running for 14.31)
10:49:41 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
10:49:41 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
10:49:41 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
10:49:41 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
11:14:07 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2: startup date [Fri Aug 02 11:14:07 CST 2019]; root of context hierarchy
11:14:07 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
11:14:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:07 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ccdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:08 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
11:14:08 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@eec010: startup date [Fri Aug 02 11:14:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:14:09 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
11:14:10 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
11:14:10 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
11:14:10 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$4bfc536a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d69a5cd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$7cad03f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$60294336] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@fdc83: startup date [Fri Aug 02 11:14:11 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@eec010
11:14:11 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$5581cdcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$170e9200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$9af13cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e5ff3cbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$138ffe28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1adf8323] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:12 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4ccdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
11:14:13 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
11:14:13 [main] INFO  StandardService - Starting service [Tomcat]
11:14:13 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
11:14:13 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
11:14:13 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
11:14:13 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5606 ms
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
11:14:15 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
11:14:15 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
11:14:16 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1403943: startup date [Fri Aug 02 11:14:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@eec010
11:14:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:16 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c156fb: startup date [Fri Aug 02 11:14:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@eec010
11:14:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:17 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
11:14:17 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:14:17 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:14:17 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1577ab8
11:14:18 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
11:14:18 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
11:14:18 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@eec010: startup date [Fri Aug 02 11:14:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff64c2
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
11:14:19 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
11:14:19 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
11:14:20 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:20 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:20 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:20 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:20 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
11:14:20 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
11:14:23 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
11:14:24 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
11:14:24 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
11:14:25 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
11:14:25 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
11:14:25 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
11:14:25 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
11:14:25 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
11:14:25 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
11:14:25 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
11:14:25 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
11:14:25 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
11:14:25 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=eec010,type=ConfigurationPropertiesRebinder]
11:14:25 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
11:14:25 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
11:14:25 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
11:14:25 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
11:14:25 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
11:14:25 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
11:14:25 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
11:14:25 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
11:14:25 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
11:14:26 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:14:27 [main] INFO  DiscoveryClient - Disable delta property : false
11:14:27 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
11:14:27 [main] INFO  DiscoveryClient - Force full registry fetch : false
11:14:27 [main] INFO  DiscoveryClient - Application is null : false
11:14:27 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
11:14:27 [main] INFO  DiscoveryClient - Application version is -1: true
11:14:27 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
11:14:27 [main] INFO  DiscoveryClient - The response status is 200
11:14:27 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
11:14:27 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
11:14:27 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564715667939 with initial instances count: 4
11:14:27 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
11:14:27 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564715667988, current=UP, previous=STARTING]
11:14:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
11:14:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
11:14:28 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
11:14:28 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
11:14:28 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
11:14:28 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
11:14:28 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
11:14:28 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
11:14:28 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
11:14:28 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
11:14:28 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 21.953 seconds (JVM running for 24.007)
11:19:27 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
11:24:27 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:06:49 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a: startup date [Fri Aug 02 14:06:49 CST 2019]; root of context hierarchy
14:06:49 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:06:49 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:49 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:50 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:06:50 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Fri Aug 02 14:06:50 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.11/bp-base-core-1.0.11.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:06:51 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:06:52 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:06:52 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:06:52 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$6df2f1b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$f890fb26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$9ea3a240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$821fe185] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@d96578: startup date [Fri Aug 02 14:06:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
14:06:53 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$77786c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$3905304f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$bce7db2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$7f5db0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$35869c77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:53 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3cd62172] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:54 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$26c37e2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:06:54 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:06:54 [main] INFO  StandardService - Starting service [Tomcat]
14:06:54 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:06:55 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:06:55 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:06:55 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5175 ms
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:06:56 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:06:56 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:06:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12f9e3c: startup date [Fri Aug 02 14:06:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
14:06:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17f2e67: startup date [Fri Aug 02 14:06:57 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2
14:06:57 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:57 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:06:57 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:06:57 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:06:57 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e202d7
14:06:58 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:06:58 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:06:58 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@183eae2: startup date [Fri Aug 02 14:06:50 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@b4fe2a
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:06:58 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:06:58 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:06:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:06:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:06:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:06:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:06:59 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:06:59 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:07:01 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:07:01 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:07:02 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:07:02 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:07:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:07:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:07:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:07:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:07:02 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:07:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:07:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:07:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:07:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=183eae2,type=ConfigurationPropertiesRebinder]
14:07:02 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:07:02 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:07:02 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:07:02 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:07:02 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:07:02 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:07:02 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:07:02 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:07:02 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:07:03 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:07:03 [main] INFO  DiscoveryClient - Disable delta property : false
14:07:03 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:07:03 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:07:03 [main] INFO  DiscoveryClient - Application is null : false
14:07:03 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:07:03 [main] INFO  DiscoveryClient - Application version is -1: true
14:07:03 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:07:03 [main] INFO  DiscoveryClient - The response status is 200
14:07:03 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:07:03 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:07:03 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564726023495 with initial instances count: 1
14:07:03 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:07:03 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564726023516, current=UP, previous=STARTING]
14:07:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:07:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:07:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:07:03 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:07:03 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:07:03 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:07:03 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:07:03 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:07:03 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:07:03 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:07:03 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 15.301 seconds (JVM running for 17.117)
14:09:43 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:09:43 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:09:43 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
14:09:43 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:15:33 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f8285e: startup date [Fri Aug 02 14:15:33 CST 2019]; root of context hierarchy
14:15:33 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:15:34 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:34 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45551243] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:35 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:15:35 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287: startup date [Fri Aug 02 14:15:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f8285e
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:15:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:15:37 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:15:37 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:15:37 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:15:38 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:15:38 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$8c8485ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$17228f3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$bd353655] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$a0b1759a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:39 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb3209: startup date [Fri Aug 02 14:15:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287
14:15:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$960a0030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$5796c464] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$db796f3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$26876f20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$5418308c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5b67b587] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45551243] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:15:42 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:15:42 [main] INFO  StandardService - Starting service [Tomcat]
14:15:42 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:15:43 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:15:43 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:15:43 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 7926 ms
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:15:44 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:15:45 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:15:46 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a794a3: startup date [Fri Aug 02 14:15:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287
14:15:46 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:46 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1cd84f9: startup date [Fri Aug 02 14:15:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287
14:15:46 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:15:47 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:15:47 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:15:47 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:15:47 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1940d6b
14:15:48 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:15:48 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:15:49 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287: startup date [Fri Aug 02 14:15:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f8285e
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:15:49 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:15:50 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:15:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:15:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:15:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:15:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:15:51 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:15:51 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:15:55 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:15:56 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:15:57 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:15:57 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:15:57 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:15:57 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:15:57 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:15:57 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:15:57 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:15:57 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:15:57 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:15:57 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:15:57 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4d2287,type=ConfigurationPropertiesRebinder]
14:15:57 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:15:57 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:15:57 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:15:58 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:15:58 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:15:58 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:15:58 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:15:58 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:15:58 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:15:59 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:15:59 [main] INFO  DiscoveryClient - Disable delta property : false
14:15:59 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:15:59 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:15:59 [main] INFO  DiscoveryClient - Application is null : false
14:15:59 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:15:59 [main] INFO  DiscoveryClient - Application version is -1: true
14:15:59 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:16:00 [main] INFO  DiscoveryClient - The response status is 200
14:16:00 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:16:00 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:16:00 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564726560097 with initial instances count: 5
14:16:00 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:16:00 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564726560150, current=UP, previous=STARTING]
14:16:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:16:00 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:16:00 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:16:00 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:16:00 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:16:00 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:16:00 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:16:00 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:16:00 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:16:00 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:16:00 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 28.2 seconds (JVM running for 30.651)
14:16:10 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:16:10 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:16:10 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
14:16:10 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:16:33 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b86aa9: startup date [Fri Aug 02 14:16:33 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d2287
14:16:33 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:16:34 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:16:34 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
14:16:34 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:16:34 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:16:34 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1d38198
14:20:59 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:27:40 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2db68f: startup date [Fri Aug 02 14:27:40 CST 2019]; root of context hierarchy
14:27:40 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
14:27:40 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:41 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc89f657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:41 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
14:27:41 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e: startup date [Fri Aug 02 14:27:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2db68f
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:27:43 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
14:27:44 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
14:27:44 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
14:27:44 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$43b969e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$ce57734f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$746a1a69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$57e659ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:45 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dffdb: startup date [Fri Aug 02 14:27:45 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e
14:27:45 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$4d3ee444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$ecba878] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$92ae5353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$ddbc5334] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$b4d14a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$129c999b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:46 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fc89f657] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
14:27:47 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
14:27:47 [main] INFO  StandardService - Starting service [Tomcat]
14:27:47 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
14:27:48 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
14:27:48 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
14:27:48 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6681 ms
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
14:27:49 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
14:27:50 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
14:27:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d0e118: startup date [Fri Aug 02 14:27:51 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e
14:27:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:51 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a1beb3: startup date [Fri Aug 02 14:27:51 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e
14:27:51 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:51 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
14:27:52 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:27:52 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:27:52 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@143b101
14:27:53 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
14:27:53 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
14:27:53 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e: startup date [Fri Aug 02 14:27:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2db68f
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
14:27:53 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
14:27:54 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
14:27:54 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
14:27:55 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:27:55 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:27:55 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:27:55 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:27:55 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
14:27:55 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
14:27:59 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
14:28:00 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
14:28:00 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
14:28:01 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
14:28:01 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
14:28:01 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
14:28:01 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
14:28:01 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
14:28:01 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
14:28:01 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
14:28:01 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
14:28:01 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
14:28:01 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=11e414e,type=ConfigurationPropertiesRebinder]
14:28:01 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
14:28:01 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
14:28:01 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
14:28:01 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
14:28:01 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
14:28:01 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
14:28:01 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
14:28:02 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
14:28:02 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
14:28:02 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:28:02 [main] INFO  DiscoveryClient - Disable delta property : false
14:28:02 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
14:28:02 [main] INFO  DiscoveryClient - Force full registry fetch : false
14:28:02 [main] INFO  DiscoveryClient - Application is null : false
14:28:02 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
14:28:02 [main] INFO  DiscoveryClient - Application version is -1: true
14:28:02 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
14:28:03 [main] INFO  DiscoveryClient - The response status is 200
14:28:03 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
14:28:03 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
14:28:03 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564727283085 with initial instances count: 13
14:28:03 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
14:28:03 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564727283123, current=UP, previous=STARTING]
14:28:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
14:28:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
14:28:03 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
14:28:03 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
14:28:03 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
14:28:03 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
14:28:03 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
14:28:03 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
14:28:03 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
14:28:03 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
14:28:03 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 23.807 seconds (JVM running for 25.818)
14:28:34 [http-nio-8083-exec-2] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
14:28:34 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
14:28:34 [http-nio-8083-exec-2] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
14:28:34 [http-nio-8083-exec-2] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
14:28:46 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@112436d: startup date [Fri Aug 02 14:28:46 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e
14:28:46 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:28:46 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:28:46 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
14:28:46 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:28:46 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:28:46 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:28:46 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1238b76
14:28:47 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:33:02 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c84384: startup date [Fri Aug 02 14:34:20 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@11e414e
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:34:20 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@da33d7
14:34:21 [PollingServerListUpdater-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
14:38:02 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:43:02 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:48:02 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
14:53:02 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:00:08 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bab2f1: startup date [Fri Aug 02 15:00:08 CST 2019]; root of context hierarchy
15:00:09 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:00:09 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:12 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:00:12 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20: startup date [Fri Aug 02 15:00:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bab2f1
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:00:14 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:00:15 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:00:16 [main] INFO  GenericScope - BeanFactory id=e0d09df9-b9c0-3afe-98d7-ea00945c206d
15:00:16 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$ed57f7d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$77f60140] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$1e08a85a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:16 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$184e79f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b62db8: startup date [Fri Aug 02 15:00:17 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20
15:00:17 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$f6dd7235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$b86a3669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$3c4ce144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$875ae125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$b4eba291] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:17 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$bc3b278c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6288448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:00:19 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:00:19 [main] INFO  StandardService - Starting service [Tomcat]
15:00:19 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:00:20 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:00:20 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:00:20 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 7782 ms
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:00:21 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:00:21 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:00:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2aa5fc: startup date [Fri Aug 02 15:00:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20
15:00:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c3e686: startup date [Fri Aug 02 15:00:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20
15:00:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:23 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:00:23 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:00:23 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:00:23 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5540f9
15:00:24 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:00:24 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:00:25 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20: startup date [Fri Aug 02 15:00:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bab2f1
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:00:25 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:00:25 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:00:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:00:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:00:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:00:26 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:00:26 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:00:27 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:30 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:00:31 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:00:32 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:00:32 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:00:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:00:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:00:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:00:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:00:32 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:00:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:00:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:00:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:00:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=cff20,type=ConfigurationPropertiesRebinder]
15:00:32 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:00:32 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:00:32 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:00:32 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:00:32 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:00:32 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:00:32 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:00:33 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:00:33 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:00:33 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:00:33 [main] INFO  DiscoveryClient - Disable delta property : false
15:00:33 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:00:33 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:00:33 [main] INFO  DiscoveryClient - Application is null : false
15:00:33 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:00:33 [main] INFO  DiscoveryClient - Application version is -1: true
15:00:33 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:00:34 [main] INFO  DiscoveryClient - The response status is 200
15:00:34 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:00:34 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:00:34 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564729234355 with initial instances count: 13
15:00:34 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:00:34 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564729234397, current=UP, previous=STARTING]
15:00:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:00:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:00:34 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:00:34 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:00:34 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:00:34 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:00:34 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:00:34 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:00:34 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:00:34 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:00:34 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 26.841 seconds (JVM running for 30.203)
15:02:19 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
15:02:19 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
15:02:19 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
15:02:19 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
15:02:24 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@46b71e: startup date [Fri Aug 02 15:02:24 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cff20
15:02:24 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:25 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:02:25 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
15:02:25 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:02:25 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:02:25 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:02:25 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@ea6770
15:02:26 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:05:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:10:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:15:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:20:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:25:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:30:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:35:33 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:39:20 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a8312f: startup date [Fri Aug 02 15:39:20 CST 2019]; root of context hierarchy
15:39:20 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
15:39:20 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:39:20 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$adfaf6b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:21 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
15:39:21 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a: startup date [Fri Aug 02 15:39:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a8312f
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:39:23 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
15:39:23 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
15:39:24 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
15:39:24 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$f52a6a41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$7fc873ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$25db1ac8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$9575a0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b50de6: startup date [Fri Aug 02 15:39:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a
15:39:25 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$feafe4a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$c03ca8d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$441f53b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$8f2d5393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$bcbe14ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:25 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c40d99fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:26 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$adfaf6b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:39:27 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
15:39:27 [main] INFO  StandardService - Starting service [Tomcat]
15:39:27 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
15:39:28 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
15:39:28 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
15:39:28 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6255 ms
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
15:39:29 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
15:39:29 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
15:39:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b82018: startup date [Fri Aug 02 15:39:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a
15:39:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:39:30 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a52072: startup date [Fri Aug 02 15:39:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a
15:39:30 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:39:31 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
15:39:31 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:39:31 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:39:31 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@e218d8
15:39:32 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
15:39:32 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
15:39:32 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a: startup date [Fri Aug 02 15:39:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a8312f
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:39:33 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:39:34 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
15:39:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:39:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:39:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:39:34 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:39:35 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
15:39:35 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:38 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:39:39 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
15:39:40 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
15:39:40 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
15:39:40 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
15:39:40 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
15:39:40 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
15:39:40 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
15:39:40 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
15:39:40 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
15:39:40 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
15:39:40 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
15:39:40 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6aa04a,type=ConfigurationPropertiesRebinder]
15:39:40 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
15:39:40 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
15:39:40 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
15:39:40 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
15:39:40 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
15:39:40 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
15:39:40 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
15:39:41 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
15:39:41 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
15:39:41 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:39:41 [main] INFO  DiscoveryClient - Disable delta property : false
15:39:41 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
15:39:41 [main] INFO  DiscoveryClient - Force full registry fetch : false
15:39:41 [main] INFO  DiscoveryClient - Application is null : false
15:39:41 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
15:39:41 [main] INFO  DiscoveryClient - Application version is -1: true
15:39:41 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
15:39:42 [main] INFO  DiscoveryClient - The response status is 200
15:39:42 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
15:39:42 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
15:39:42 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564731582309 with initial instances count: 13
15:39:42 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
15:39:42 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564731582348, current=UP, previous=STARTING]
15:39:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
15:39:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
15:39:42 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
15:39:42 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
15:39:42 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
15:39:42 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
15:39:42 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
15:39:42 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
15:39:42 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
15:39:42 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
15:39:42 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 24.453 seconds (JVM running for 26.785)
15:40:02 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
15:40:02 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
15:40:03 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
15:40:03 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
15:40:07 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a8a48: startup date [Fri Aug 02 15:40:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a
15:40:07 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:40:08 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:40:08 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
15:40:08 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:40:08 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:40:08 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:40:08 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@58b77e
15:40:09 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:44:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:49:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:54:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
15:55:43 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@157de91: startup date [Fri Aug 02 15:55:43 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6aa04a
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:55:44 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@294f50
15:55:45 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
15:59:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:04:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:09:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:14:41 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:16:54 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@100f608: startup date [Fri Aug 02 16:16:54 CST 2019]; root of context hierarchy
16:16:55 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
16:16:55 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:16:55 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59d5a558] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:56 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
16:16:56 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26: startup date [Fri Aug 02 16:16:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@100f608
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:16:57 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:16:58 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:16:58 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:16:58 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
16:16:59 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
16:16:59 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$a10518e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$2ba32250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$d1b5c96a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:16:59 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$b53208af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@19af731: startup date [Fri Aug 02 16:17:00 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26
16:17:00 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$aa8a9345] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$6c175779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$effa0254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$3b080235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$6898c3a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:00 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6fe8489c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59d5a558] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:17:01 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
16:17:01 [main] INFO  StandardService - Starting service [Tomcat]
16:17:01 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
16:17:02 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16:17:02 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
16:17:02 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6074 ms
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
16:17:03 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
16:17:04 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
16:17:05 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@844216: startup date [Fri Aug 02 16:17:05 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26
16:17:05 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:17:05 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17b8fc3: startup date [Fri Aug 02 16:17:05 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26
16:17:05 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:17:05 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
16:17:05 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:17:05 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:17:05 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1cbc336
16:17:06 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:17:06 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:17:07 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26: startup date [Fri Aug 02 16:16:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@100f608
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:17:07 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:17:07 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
16:17:08 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:17:08 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:17:08 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:17:08 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:17:08 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
16:17:09 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:17:12 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:17:12 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:17:13 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
16:17:13 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
16:17:13 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:17:13 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:17:13 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
16:17:13 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:17:13 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
16:17:13 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:17:13 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:17:13 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:17:13 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f29e26,type=ConfigurationPropertiesRebinder]
16:17:13 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:17:13 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
16:17:13 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
16:17:14 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
16:17:14 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
16:17:14 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
16:17:14 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
16:17:14 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
16:17:14 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
16:17:15 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:17:15 [main] INFO  DiscoveryClient - Disable delta property : false
16:17:15 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
16:17:15 [main] INFO  DiscoveryClient - Force full registry fetch : false
16:17:15 [main] INFO  DiscoveryClient - Application is null : false
16:17:15 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
16:17:15 [main] INFO  DiscoveryClient - Application version is -1: true
16:17:15 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
16:17:15 [main] INFO  DiscoveryClient - The response status is 200
16:17:15 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
16:17:15 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
16:17:15 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564733835772 with initial instances count: 10
16:17:15 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
16:17:15 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564733835812, current=UP, previous=STARTING]
16:17:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:17:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:17:15 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:17:15 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
16:17:15 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
16:17:15 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
16:17:15 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
16:17:15 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
16:17:16 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
16:17:16 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
16:17:16 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 23.315 seconds (JVM running for 28.097)
16:19:36 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
16:19:36 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
16:19:36 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
16:19:36 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
16:19:45 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@137c415: startup date [Fri Aug 02 16:19:45 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f29e26
16:19:45 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:19:46 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:19:46 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
16:19:46 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:19:46 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
16:19:46 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:19:46 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@11c8fbd
16:19:47 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:22:18 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a114: startup date [Fri Aug 02 16:22:18 CST 2019]; root of context hierarchy
16:22:18 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
16:22:18 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:18 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18937a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:19 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
16:22:19 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531: startup date [Fri Aug 02 16:22:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a114
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:22:20 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:22:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:22:21 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:22:21 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
16:22:22 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
16:22:22 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$48b8ab33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$d356b4a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:22 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$79695bba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$5ce59aff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fcf85a: startup date [Fri Aug 02 16:22:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531
16:22:23 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$523e2595] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$13cae9c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$97ad94a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$e2bb9485] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$104c55f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:23 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$179bdaec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:24 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18937a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:22:24 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
16:22:24 [main] INFO  StandardService - Starting service [Tomcat]
16:22:24 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
16:22:25 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16:22:25 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
16:22:25 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5837 ms
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
16:22:26 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
16:22:27 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
16:22:27 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ca96a0: startup date [Fri Aug 02 16:22:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531
16:22:28 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:28 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@178550b: startup date [Fri Aug 02 16:22:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531
16:22:28 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:28 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
16:22:28 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:22:28 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:22:28 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1c0bae6
16:22:29 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:22:29 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:22:30 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531: startup date [Fri Aug 02 16:22:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a114
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:22:30 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:22:30 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
16:22:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:22:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:22:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:22:31 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:22:31 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
16:22:32 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:22:34 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:22:35 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:22:36 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
16:22:36 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
16:22:36 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:22:36 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:22:36 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
16:22:36 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:22:36 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
16:22:36 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:22:36 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:22:36 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:22:36 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=16e7531,type=ConfigurationPropertiesRebinder]
16:22:36 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:22:36 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
16:22:36 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
16:22:36 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
16:22:36 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
16:22:37 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
16:22:37 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
16:22:37 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
16:22:37 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
16:22:37 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:22:37 [main] INFO  DiscoveryClient - Disable delta property : false
16:22:37 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
16:22:37 [main] INFO  DiscoveryClient - Force full registry fetch : false
16:22:37 [main] INFO  DiscoveryClient - Application is null : false
16:22:37 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
16:22:37 [main] INFO  DiscoveryClient - Application version is -1: true
16:22:37 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
16:22:38 [main] INFO  DiscoveryClient - The response status is 200
16:22:38 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
16:22:38 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
16:22:38 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564734158174 with initial instances count: 13
16:22:38 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
16:22:38 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564734158211, current=UP, previous=STARTING]
16:22:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:22:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:22:38 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:22:38 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
16:22:38 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
16:22:38 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
16:22:38 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
16:22:38 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
16:22:38 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
16:22:38 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
16:22:38 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 21.128 seconds (JVM running for 22.967)
16:22:54 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
16:22:54 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
16:22:54 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
16:22:54 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
16:22:55 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d1bdf0: startup date [Fri Aug 02 16:22:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16e7531
16:22:55 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:22:55 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:22:55 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
16:22:55 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:22:55 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
16:22:55 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:22:55 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1c1389
16:22:56 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:27:37 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:28:57 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1815ffc: startup date [Fri Aug 02 16:28:57 CST 2019]; root of context hierarchy
16:28:58 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
16:28:58 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:28:58 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b15b0efd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:28:59 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
16:28:59 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf: startup date [Fri Aug 02 16:28:59 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1815ffc
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:29:00 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:29:01 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
16:29:01 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
16:29:01 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:01 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$f88a8288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$83288bf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$293b330f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$cb77254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b46344: startup date [Fri Aug 02 16:29:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf
16:29:02 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$20ffcea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$c39cc11e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$477f6bf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$928d6bda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:02 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$c01e2d46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c76db241] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:03 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b15b0efd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:29:04 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
16:29:04 [main] INFO  StandardService - Starting service [Tomcat]
16:29:04 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
16:29:05 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16:29:05 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
16:29:05 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5929 ms
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
16:29:06 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
16:29:06 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
16:29:07 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c062e: startup date [Fri Aug 02 16:29:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf
16:29:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:07 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16ce057: startup date [Fri Aug 02 16:29:07 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf
16:29:07 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:08 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
16:29:08 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:29:08 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:29:08 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1017263
16:29:09 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:29:09 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:29:09 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf: startup date [Fri Aug 02 16:28:59 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1815ffc
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:29:10 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:29:10 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
16:29:11 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:11 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:11 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:11 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:11 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
16:29:11 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:14 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:29:15 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:29:16 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
16:29:16 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
16:29:16 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:29:16 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:29:16 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
16:29:16 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:29:16 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
16:29:16 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:29:16 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:29:16 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:29:16 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=57fadf,type=ConfigurationPropertiesRebinder]
16:29:16 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:29:16 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
16:29:16 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
16:29:16 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
16:29:16 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
16:29:16 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
16:29:16 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
16:29:16 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
16:29:16 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
16:29:17 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:29:17 [main] INFO  DiscoveryClient - Disable delta property : false
16:29:17 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
16:29:17 [main] INFO  DiscoveryClient - Force full registry fetch : false
16:29:17 [main] INFO  DiscoveryClient - Application is null : false
16:29:17 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
16:29:17 [main] INFO  DiscoveryClient - Application version is -1: true
16:29:17 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
16:29:17 [main] INFO  DiscoveryClient - The response status is 200
16:29:17 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
16:29:17 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
16:29:17 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564734557939 with initial instances count: 13
16:29:17 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
16:29:17 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564734557979, current=UP, previous=STARTING]
16:29:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
16:29:17 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:29:18 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:29:18 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:29:18 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
16:29:18 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
16:29:18 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
16:29:18 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
16:29:18 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
16:29:18 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
16:29:18 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
16:29:18 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 21.543 seconds (JVM running for 23.452)
16:29:33 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
16:29:33 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
16:29:33 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
16:29:33 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
16:29:34 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10d5711: startup date [Fri Aug 02 16:29:34 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57fadf
16:29:34 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:29:35 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:29:35 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
16:29:35 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:29:35 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
16:29:35 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:29:35 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1139edb
16:29:36 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:34:59 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:35:05 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10c9195: startup date [Fri Aug 02 16:35:05 CST 2019]; root of context hierarchy
16:35:06 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
16:35:06 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:35:06 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f33d3d0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:07 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
16:35:07 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1: startup date [Fri Aug 02 16:35:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10c9195
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:35:08 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
16:35:09 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
16:35:09 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
16:35:09 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:09 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$3a6cb09a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$c50aba07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$6b1d6121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$4e99a066] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17692cb: startup date [Fri Aug 02 16:35:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:35:10 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$43f22afc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$57eef30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$89619a0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:10 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$d46f99ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$2005b58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$94fe053] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:11 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f33d3d0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:35:12 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
16:35:12 [main] INFO  StandardService - Starting service [Tomcat]
16:35:12 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
16:35:13 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16:35:13 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
16:35:13 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 5802 ms
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
16:35:14 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
16:35:14 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
16:35:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@42ef02: startup date [Fri Aug 02 16:35:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:35:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:35:15 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1dba7a0: startup date [Fri Aug 02 16:35:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:35:15 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:35:16 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
16:35:16 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:35:16 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:35:16 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1563c13
16:35:17 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
16:35:17 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
16:35:17 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1: startup date [Fri Aug 02 16:35:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@10c9195
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
16:35:18 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
16:35:18 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
16:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:35:19 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
16:35:19 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
16:35:22 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
16:35:23 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
16:35:24 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
16:35:24 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
16:35:24 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
16:35:24 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
16:35:24 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
16:35:24 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
16:35:24 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
16:35:24 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
16:35:24 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
16:35:24 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
16:35:24 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=f283e1,type=ConfigurationPropertiesRebinder]
16:35:24 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
16:35:24 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
16:35:24 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
16:35:24 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
16:35:24 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
16:35:24 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
16:35:24 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
16:35:24 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
16:35:24 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
16:35:25 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:35:25 [main] INFO  DiscoveryClient - Disable delta property : false
16:35:25 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
16:35:25 [main] INFO  DiscoveryClient - Force full registry fetch : false
16:35:25 [main] INFO  DiscoveryClient - Application is null : false
16:35:25 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
16:35:25 [main] INFO  DiscoveryClient - Application version is -1: true
16:35:25 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
16:35:25 [main] INFO  DiscoveryClient - The response status is 200
16:35:25 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
16:35:25 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
16:35:25 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564734925869 with initial instances count: 13
16:35:25 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
16:35:25 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564734925911, current=UP, previous=STARTING]
16:35:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
16:35:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
16:35:25 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
16:35:26 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
16:35:26 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
16:35:26 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
16:35:26 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
16:35:26 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
16:35:26 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
16:35:26 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
16:35:26 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 21.256 seconds (JVM running for 23.413)
16:36:12 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
16:36:12 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
16:36:12 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
16:36:12 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
16:36:13 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@15080c1: startup date [Fri Aug 02 16:36:13 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:36:13 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:36:13 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:36:13 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
16:36:13 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:36:13 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
16:36:13 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:36:13 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1cf77cd
16:36:14 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:36:48 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b0783e: startup date [Fri Aug 02 16:36:48 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@f283e1
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:36:49 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1e4dfb7
16:36:50 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
16:40:25 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:45:25 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:50:25 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
16:55:25 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:00:25 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:03:31 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1152006: startup date [Fri Aug 02 17:03:31 CST 2019]; root of context hierarchy
17:03:32 [background-preinit] INFO  Version - HV000001: Hibernate Validator 5.3.6.Final
17:03:32 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:03:32 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e5cb5fab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:35 [main] INFO  OmsDlsbWebApplication - No active profile set, falling back to default profiles: default
17:03:35 [main] INFO  AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019: startup date [Fri Aug 02 17:03:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1152006
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'propertiesService' with a different definition: replacing [Generic bean: class [com.dc.properties.PropertiesService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/properties/PropertiesService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=propertiesService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dbSearcher' with a different definition: replacing [Generic bean: class [com.dc.ip2region.DbSearcher]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file:/D:/maven/repo/com/dc/springboot/bp-base-core/1.0.8/bp-base-core-1.0.8.jar!/com/dc/ip2region/DbSearcher.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=ipConfig; factoryMethodName=dbSearcher; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/properties/IpConfig.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=feignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/common/config/FeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'feignLoggerLevel' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=feignLoggerLevel; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'dcBasicAuthRequestInterceptor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=dcBasicAuthRequestInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:03:36 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'options' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbOmsFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbOmsFeignConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=dlsbRmFeignConfiguration; factoryMethodName=options; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/dc/dlsb/common/DlsbRmFeignConfiguration.class]]
17:03:37 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
17:03:37 [main] INFO  DefaultListableBeanFactory - Overriding bean definition for bean 'BASE-SERVICE.FeignClientSpecification' with a different definition: replacing [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.cloud.netflix.feign.FeignClientSpecification]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
17:03:37 [main] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
17:03:38 [main] INFO  GenericScope - BeanFactory id=b6b2b1bb-b1c4-3ad8-b921-e8dba8fa9a52
17:03:38 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.AuthorizeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.DataDictionaryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.FileService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.LogInfoService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.ModuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.OrgService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.RoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.TestService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.base.client.UserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbOmsClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.dlsb.client.DlsbRmClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.config.ShiroAutoConfiguration' of type [com.dc.shiro.config.ShiroAutoConfiguration$$EnhancerBySpringCGLIB$$2cfad336] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroProperties' of type [com.dc.shiro.config.ShiroProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:38 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.dc.shiro.config.RedisConfig$$EnhancerBySpringCGLIB$$b798dca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration$RedisConnectionConfiguration$$EnhancerBySpringCGLIB$$5dab83bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getSessionDAO' of type [com.dc.shiro.redis.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisCacheManager' of type [com.dc.shiro.redis.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.com.dc.OmsDlsbWebApplication.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'BASE-SERVICE.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-OMS.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'OMS-DLSB-SERVICE-RM.FeignClientSpecification' of type [org.springframework.cloud.netflix.feign.FeignClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$$EnhancerBySpringCGLIB$$4127c302] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignContext' of type [org.springframework.cloud.netflix.feign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1166f2e: startup date [Fri Aug 02 17:03:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019
17:03:39 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feign.client-org.springframework.cloud.netflix.feign.FeignClientProperties' of type [org.springframework.cloud.netflix.feign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dlsbRmFeignConfiguration' of type [com.dc.dlsb.common.DlsbRmFeignConfiguration$$EnhancerBySpringCGLIB$$36804d98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dcBasicAuthRequestInterceptor' of type [feign.auth.BasicAuthRequestInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.DefaultFeignLoadBalancedConfiguration$$EnhancerBySpringCGLIB$$f80d11cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.netflix.feign.ribbon.FeignRibbonClientAutoConfiguration$$EnhancerBySpringCGLIB$$7befbca7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$c6fdbc88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.netflix.feign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignClient' of type [org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.netflix.feign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration$$EnhancerBySpringCGLIB$$f48e7df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'feignTargeter' of type [org.springframework.cloud.netflix.feign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'realmService.RealmServiceHystrix' of type [com.dc.shiro.realm.RealmService$RealmServiceHystrix] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.dc.shiro.realm.RealmService' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myRealm' of type [com.dc.shiro.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:39 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getAuthorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fbde02ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:40 [main] INFO  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e5cb5fab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
17:03:40 [main] INFO  TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8083 (http)
17:03:40 [main] INFO  StandardService - Starting service [Tomcat]
17:03:40 [main] INFO  StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.27
17:03:41 [localhost-startStop-1] INFO  TldScanner - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
17:03:41 [localhost-startStop-1] INFO  [/dlsb] - Initializing Spring embedded WebApplicationContext
17:03:41 [localhost-startStop-1] INFO  ContextLoader - Root WebApplicationContext: initialization completed in 6419 ms
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'metricsFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'webRequestLoggingFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'shiroFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'applicationContextIdFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  FilterRegistrationBean - Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
17:03:42 [localhost-startStop-1] INFO  ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
17:03:43 [main] INFO  [/dlsb] - jolokia: No access restrictor found, access to any MBean is allowed
17:03:44 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f4aeb6: startup date [Fri Aug 02 17:03:44 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019
17:03:44 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:03:44 [main] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a61af2: startup date [Fri Aug 02 17:03:44 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019
17:03:44 [main] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:03:44 [main] INFO  IpConfig - ipdb的位置：classpath:ip2region.db
17:03:44 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
17:03:44 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:03:44 [main] INFO  DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@bc6d8b
17:03:45 [main] WARN  URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
17:03:45 [main] INFO  URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
17:03:46 [main] INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019: startup date [Fri Aug 02 17:03:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1152006
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDlsbIndexPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbIndexPage()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/exportExcel.do]}" onto public void com.dc.dlsbcontroller.DlsbController.exportExcel(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getSbDataByDclx.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getSbDataByDclx(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/saveSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.saveSbData(java.util.List<com.dc.dlsb.vomodel.SbDataModVo>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/checkIsCanSbData.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.checkIsCanSbData(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goEditPage.do]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goZdEditDlPage(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goIndexByDclx.hmle]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goSearchSbDataIndex(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/getDateEnumBySbOmsOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.dlsbcontroller.DlsbController.getDateEnumBySbOmsOrgid(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goSearchIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroller.DlsbController.goDlsbSearchDataIndexPage()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/dlsb/goDcConfigIndex.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.dlsbcontroolertest.DlsbControllerTest.goDcConfigIndex()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.index(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/main.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.main(org.springframework.ui.Model,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/register.html],methods=[POST]}" onto public java.lang.String com.dc.base.controller.IndexController.register(com.dc.base.model.SYS_USER)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/test.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.test(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/CommonUrl/{fun}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.CommonUrl(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/showFunPage.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.indexFunPage(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[POST],produces=[text/html;charset=utf-8]}" onto public java.lang.String com.dc.base.controller.IndexController.userLogin(com.dc.base.model.SYS_USER,java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/getMenuTreeByMenuid.do]}" onto public java.lang.String com.dc.base.controller.IndexController.getMenuTreeByMenuid(javax.servlet.http.HttpServletRequest,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.login(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.support(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logout.html],methods=[GET]}" onto public java.lang.String com.dc.base.controller.IndexController.logout()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/help/withoutAuth/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.helpPage(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/index/home/{page}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.IndexController.homePage(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LogInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/logInfo/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LogInfoController.listUI(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/list.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.list(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByOrg.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByOrg(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/orgtree.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getOrgByPid(java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/{url}.html],methods=[GET],produces=[text/html;charset=utf-8]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.LoginShowPage(java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/withoutAuth/getUserListByName.do],methods=[POST]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.LoginInfoController.getUserlistByName(java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/login/listUI.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.LoginInfoController.listUI(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getModuleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getTreeNode(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFunGroup(com.dc.base.model.SysModuleGroup) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteFunGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteFunGroup(java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/common.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.commonSet(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteRelation(java.lang.String,java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunGroupList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunGroupList(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/EditNodeList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.editNodeList(com.dc.base.model.SYS_MODULE[])
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getMenuList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getMenuList(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/deleteNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.deleteNode(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addRelation.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addRelation(java.lang.String,java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunWithOutGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunWithOutGroup(java.lang.Integer,java.lang.Integer) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/getFunListByGroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.getFunListByGroup(java.lang.Integer,java.lang.Integer,java.lang.String) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showAdd(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/edit.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.showEdit(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/icon.html]}" onto public java.lang.String com.dc.base.controller.ModuleController.icon()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/AddFun.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.ModuleController.addFun(com.dc.base.model.SYS_MODULE)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/module/addGroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.ModuleController.addGroup(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getOrgList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ORG_INFO) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/getTreeNode.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.getTreeNode(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/AddOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.addNodeList(com.dc.base.model.SYS_ORG_INFO)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/CheckType.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.CheckType(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/deleteOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.deleteOrg(java.lang.String[])
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/EditOrg.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.OrgController.editOrg(com.dc.base.model.SYS_ORG_INFO)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/org/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.OrgController.ShowAdd(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.addRoleModule(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.AddRoleModule(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.deleteRole(java.lang.String[])
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.getFunidByRoleid(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.RoleController.ShowAdd(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/role/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.RoleController.addRole(com.dc.base.model.SYS_ROLE)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getRoleList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.SYS_ROLE) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/addRoleModule.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.addRoleModule(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRoleModule.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.AddRoleModule(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/deleteRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.deleteRole(java.lang.String[])
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/getFunid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.getFunidByRoleid(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysRoleController.ShowAdd(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysrole/AddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysRoleController.addRole(com.dc.base.model.SYS_ROLE)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserList.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.list(java.lang.Integer,java.lang.Integer,com.dc.base.model.V_SYS_USER,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getOrgid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getOrgidByUserid(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRepassword(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/updateUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUser(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.resetPassword(com.dc.base.model.SYS_USER)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showUserInfo(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/withoutAuth/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.SysUserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/CkLoginName.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.chekLoginName(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUserNoRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserNoRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editUserRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.updateUserRoles(java.lang.String,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserRemoveRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserRemoveRoles(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/showRoles.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.showRoles(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupRemoveUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupRemoveUsers(java.util.List<java.lang.String>,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getSaveGroup(com.dc.base.model.SYS_USERGROUP)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getnogroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getNoGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/delgroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getDelGroup(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusergroup.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUserGroup(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getgroupusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getGroupUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/dogroup.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAddGroup(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/GroupAddUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.GroupAddUsers(java.util.List<com.dc.base.model.SYS_USER_USERGROUP>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRoleNew.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRoleNew(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusersbyorgids.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsersByOrgids(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/UserAddRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.UserAddRoles(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersRemoveRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleRemove(java.util.List<java.lang.String>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/hasRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/noRoleUsers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByNotInRoleid(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/usersAddRole.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.usersChangeRoleAdd(java.util.List<com.dc.base.model.SYS_USER_ROLE>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getUsersByOrgidsAndUsername.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.selectUsersByOrgidsAndUserName(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/editRole.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.editRole(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.SysUserController.ShowAdd(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getRoles.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getRoles(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/getusers.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.getUsers(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysuser/AddUser.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.SysUserController.addUser(com.dc.base.model.V_SYS_USER)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showRepassword.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showRepassword(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLogin.html]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.validateAccount(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/resetPassword.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.base.controller.UserController.resetPassword(com.dc.base.model.SYS_USER)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/showUserInfo.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.showUserInfo(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/jsonLogin.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLogin(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/ssoRediret.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/withoutAuth/jsonLoginWithOmsPassword.do]}" onto public java.lang.String com.dc.base.controller.UserController.jsonLoginWithOmsPassword(com.dc.base.model.SYS_USER,java.lang.Boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/user/add.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.base.controller.UserController.ShowAdd(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdatalist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.list(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/index.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowIndex(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirlist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirList(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/updateEnum.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.updateEnum(com.dc.base.model.SYS_DICTIONARY_ENUM)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDirList(java.util.List<java.lang.String>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/audirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddDirTree(java.lang.String,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impdirtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowImpDirTree(java.lang.String,java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdate.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdate(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showdatagrid.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowDatagrid(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.addDataDictionary(com.dc.base.model.SYS_DICTIONARY)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/addupdatelist.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowAddAndUpdateList(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirTree(java.util.List<com.dc.base.model.SYS_DICTIONARY_TREE>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/impuserorgtodirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.impUserOrOrgToDirList(java.util.List<com.dc.base.model.SYS_DICTIONARY_LIST>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirdataBykey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryDataByKey(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarydatagrid.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getdictionarydatagrid(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryTree(com.dc.base.model.SYS_DICTIONARY_TREE)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deldirtree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.delDataDictionaryTree(java.util.List<java.lang.String>)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/deletedir.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.deleteDataDictionary(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/savedirlist.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.saveDataDictionaryList(com.dc.base.model.SYS_DICTIONARY_LIST)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getdictionarytree.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDictionaryTree(java.lang.String,java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/getDirTreeAllBydirKey.do]}" onto public com.alibaba.fastjson.JSONObject com.dc.common.controller.SysDataDictionaryController.getDirTreeAllBydirKey(java.lang.String)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showenum.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowEnum(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/showtree.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTree(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/sysdd/test.html]}" onto public org.springframework.web.servlet.ModelAndView com.dc.common.controller.SysDataDictionaryController.ShowTest()
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
17:03:46 [main] INFO  RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
17:03:46 [main] INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
17:03:47 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:03:47 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:03:47 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:03:47 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:03:47 [main] INFO  ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
17:03:47 [main] INFO  SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
17:03:50 [main] INFO  EndpointHandlerMapping - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
17:03:51 [main] INFO  FreeMarkerConfigurer - ClassTemplateLoader for Spring macros added to FreeMarker configuration
17:03:52 [main] WARN  EurekaStarterDeprecationWarningAutoConfiguration - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
17:03:52 [main] INFO  AnnotationMBeanExporter - Registering beans for JMX exposure on startup
17:03:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
17:03:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
17:03:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
17:03:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
17:03:52 [main] INFO  AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
17:03:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
17:03:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
17:03:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
17:03:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=161a019,type=ConfigurationPropertiesRebinder]
17:03:52 [main] INFO  AnnotationMBeanExporter - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
17:03:52 [main] INFO  EndpointMBeanExporter - Registering beans for JMX exposure on startup
17:03:52 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 0
17:03:52 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
17:03:52 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
17:03:52 [main] INFO  DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
17:03:52 [main] INFO  DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
17:03:53 [main] INFO  DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
17:03:53 [main] INFO  DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
17:03:53 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:03:53 [main] INFO  DiscoveryClient - Disable delta property : false
17:03:53 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
17:03:53 [main] INFO  DiscoveryClient - Force full registry fetch : false
17:03:53 [main] INFO  DiscoveryClient - Application is null : false
17:03:53 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
17:03:53 [main] INFO  DiscoveryClient - Application version is -1: true
17:03:53 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
17:03:54 [main] INFO  DiscoveryClient - The response status is 200
17:03:54 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
17:03:54 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
17:03:54 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1564736634130 with initial instances count: 13
17:03:54 [main] INFO  EurekaServiceRegistry - Registering application oms-dlsb-web with eureka with status UP
17:03:54 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1564736634176, current=UP, previous=STARTING]
17:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083: registering service...
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
17:03:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_OMS-DLSB-WEB/oms-dlsb-web:10.52.2.110:8083 - registration status: 204
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
17:03:54 [main] INFO  EndpointMBeanExporter - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
17:03:54 [main] INFO  DefaultLifecycleProcessor - Starting beans in phase 2147483647
17:03:54 [main] INFO  HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration - Starting poller
17:03:54 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
17:03:54 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
17:03:54 [main] INFO  NioSelectorPool - Using a shared selector for servlet write/read
17:03:54 [main] INFO  TomcatEmbeddedServletContainer - Tomcat started on port(s): 8083 (http)
17:03:54 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8083
17:03:54 [main] INFO  OmsDlsbWebApplication - Started OmsDlsbWebApplication in 24.069 seconds (JVM running for 27.228)
17:05:04 [http-nio-8083-exec-1] INFO  [/dlsb] - Initializing Spring FrameworkServlet 'dispatcherServlet'
17:05:04 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
17:05:05 [http-nio-8083-exec-1] INFO  DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
17:05:05 [http-nio-8083-exec-1] INFO  AbstractValidatingSessionManager - Enabling session validation scheduler...
17:05:06 [hystrix-BASE-SERVICE-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@185a87: startup date [Fri Aug 02 17:05:06 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019
17:05:06 [hystrix-BASE-SERVICE-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:05:06 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:05:06 [hystrix-BASE-SERVICE-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-BASE-SERVICE
17:05:06 [hystrix-BASE-SERVICE-1] INFO  BaseLoadBalancer - Client: BASE-SERVICE instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:05:06 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
17:05:06 [hystrix-BASE-SERVICE-1] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:05:06 [hystrix-BASE-SERVICE-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client BASE-SERVICE initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=BASE-SERVICE,current list of Servers=[10.52.2.117:9500],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.117:9500;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@18d2384
17:05:07 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: BASE-SERVICE.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:08:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:13:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10d49c6: startup date [Fri Aug 02 17:15:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@161a019
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-OMS-DLSB-SERVICE-RM
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  BaseLoadBalancer - Client: OMS-DLSB-SERVICE-RM instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:15:16 [hystrix-OMS-DLSB-SERVICE-RM-1] INFO  DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client OMS-DLSB-SERVICE-RM initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=OMS-DLSB-SERVICE-RM,current list of Servers=[10.52.2.110:8075],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.52.2.110:8075;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@14bdd26
17:15:17 [PollingServerListUpdater-0] INFO  ChainedDynamicProperty - Flipping property: OMS-DLSB-SERVICE-RM.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
17:18:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:23:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:28:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:33:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:38:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:43:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:48:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:53:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
17:58:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:03:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:05:05 [SessionValidationThread-1] INFO  AbstractValidatingSessionManager - Validating all active sessions...
18:08:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
18:13:53 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
